[{"C:\\Users\\User\\Desktop\\my-hackathon\\src\\index.js":"1","C:\\Users\\User\\Desktop\\my-hackathon\\src\\App.js":"2","C:\\Users\\User\\Desktop\\my-hackathon\\src\\Routes.js":"3","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Signup\\Signup.jsx":"4","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Signin\\Signin.jsx":"5","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Home\\Slide\\Slide.jsx":"6","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Header\\Navbar\\Navbar.jsx":"7","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Footer\\Footer.jsx":"8","C:\\Users\\User\\Desktop\\my-hackathon\\src\\helpers\\constants.jsx":"9","C:\\Users\\User\\Desktop\\my-hackathon\\src\\helpers\\history.jsx":"10","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\AdminPanel\\AddProduct.jsx":"11","C:\\Users\\User\\Desktop\\my-hackathon\\src\\contexts\\AuthContext.jsx":"12","C:\\Users\\User\\Desktop\\my-hackathon\\src\\contexts\\ProductContext.jsx":"13","C:\\Users\\User\\Desktop\\my-hackathon\\src\\helpers\\CalcPrice.jsx":"14","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\AdminPanel\\AdminPanel.jsx":"15","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\AdminPanel\\AdminList.jsx":"16","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\AdminPanel\\EditProduct.jsx":"17","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Header\\Navbar\\NavbarMenuType.jsx":"18","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Product\\ProductList.jsx":"19","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Product\\ProductDetails.jsx":"20","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Header\\Cart\\Cart.jsx":"21","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Header\\Wish\\Wish.jsx":"22","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Home\\payment\\Checkout.jsx":"23","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Home\\payment\\AddressForm.jsx":"24","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Home\\payment\\PaymentForm.jsx":"25","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Profile\\Profile.jsx":"26","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Profile\\EditProfile.jsx":"27","C:\\Users\\User\\Desktop\\my-hackathon\\src\\contexts\\ProfileContext.jsx":"28","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Product\\ProductCard.jsx":"29","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Review\\ParentReview.jsx":"30","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Review\\ReviewList.jsx":"31","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Review\\Review.jsx":"32","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Home\\payment\\ReviewForm.jsx":"33","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\CreditCard\\PaymentCard\\CreditCard.jsx":"34","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\CreditCard\\utils.jsx":"35","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Header\\Cart\\TotalSum.jsx":"36","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\SearchPage\\SearchPage.jsx":"37","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Search\\SearchFunction\\SearchFunction.jsx":"38","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Search\\SearchBar\\SearchBar.jsx":"39","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Search\\SearchProductList\\SearchProductList.jsx":"40"},{"size":221,"mtime":1608524238424,"results":"41","hashOfConfig":"42"},{"size":142,"mtime":1608568018194,"results":"43","hashOfConfig":"42"},{"size":2917,"mtime":1608840941754,"results":"44","hashOfConfig":"42"},{"size":4408,"mtime":1608876174584,"results":"45","hashOfConfig":"42"},{"size":3409,"mtime":1608876027030,"results":"46","hashOfConfig":"42"},{"size":3226,"mtime":1608874209185,"results":"47","hashOfConfig":"42"},{"size":10714,"mtime":1608873499093,"results":"48","hashOfConfig":"42"},{"size":3959,"mtime":1608876794649,"results":"49","hashOfConfig":"42"},{"size":104,"mtime":1608752879253,"results":"50","hashOfConfig":"42"},{"size":92,"mtime":1608525282509,"results":"51","hashOfConfig":"42"},{"size":9674,"mtime":1608825249310,"results":"52","hashOfConfig":"42"},{"size":1875,"mtime":1608871470519,"results":"53","hashOfConfig":"42"},{"size":11925,"mtime":1608825086183,"results":"54","hashOfConfig":"42"},{"size":286,"mtime":1608620465832,"results":"55","hashOfConfig":"42"},{"size":276,"mtime":1608624085854,"results":"56","hashOfConfig":"42"},{"size":3501,"mtime":1608825661658,"results":"57","hashOfConfig":"42"},{"size":12014,"mtime":1608825333154,"results":"58","hashOfConfig":"42"},{"size":12128,"mtime":1608873771341,"results":"59","hashOfConfig":"42"},{"size":1775,"mtime":1608825483974,"results":"60","hashOfConfig":"42"},{"size":6796,"mtime":1608880511056,"results":"61","hashOfConfig":"42"},{"size":2965,"mtime":1608879002237,"results":"62","hashOfConfig":"42"},{"size":2351,"mtime":1608825428940,"results":"63","hashOfConfig":"42"},{"size":4614,"mtime":1608879220966,"results":"64","hashOfConfig":"42"},{"size":3503,"mtime":1608802294260,"results":"65","hashOfConfig":"42"},{"size":3353,"mtime":1608866837996,"results":"66","hashOfConfig":"42"},{"size":7885,"mtime":1608875057473,"results":"67","hashOfConfig":"42"},{"size":11174,"mtime":1608834252226,"results":"68","hashOfConfig":"42"},{"size":12594,"mtime":1608879099716,"results":"69","hashOfConfig":"42"},{"size":3626,"mtime":1608825454787,"results":"70","hashOfConfig":"42"},{"size":268,"mtime":1608798538552,"results":"71","hashOfConfig":"42"},{"size":3320,"mtime":1608876493873,"results":"72","hashOfConfig":"42"},{"size":1921,"mtime":1608876373228,"results":"73","hashOfConfig":"42"},{"size":5931,"mtime":1608832240089,"results":"74","hashOfConfig":"42"},{"size":4621,"mtime":1608875230564,"results":"75","hashOfConfig":"42"},{"size":1528,"mtime":1608835075639,"results":"76","hashOfConfig":"42"},{"size":582,"mtime":1608825358043,"results":"77","hashOfConfig":"42"},{"size":424,"mtime":1608840492421,"results":"78","hashOfConfig":"42"},{"size":1013,"mtime":1608841370471,"results":"79","hashOfConfig":"42"},{"size":511,"mtime":1608840443536,"results":"80","hashOfConfig":"42"},{"size":2978,"mtime":1608880192803,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"eetb4d",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"84"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"84"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"84"},"C:\\Users\\User\\Desktop\\my-hackathon\\src\\index.js",[],["192","193"],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\App.js",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\Routes.js",["194"],"import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Signin from './container/Signin/Signin';\r\nimport Signup from './container/Signup/Signup';\r\nimport Slide from './container/Home/Slide/Slide';\r\nimport Navbar from './container/Header/Navbar/Navbar'\r\nimport Footer from './container/Footer/Footer';\r\nimport AuthContextProvider from './contexts/AuthContext';\r\nimport { history } from './helpers/history'\r\n// import AddProduct from './container/AdminPanel/AddProduct';\r\nimport ProductContextProvider from './contexts/ProductContext';\r\nimport AdminPanel from './container/AdminPanel/AdminPanel';\r\nimport EditProduct from './container/AdminPanel/EditProduct';\r\nimport ProductList from './container/Product/ProductList';\r\nimport ProductDetails from './container/Product/ProductDetails';\r\nimport Cart from './container/Header/Cart/Cart';\r\nimport Wish from './container/Header/Wish/Wish';\r\nimport Checkout from './container/Home/payment/Checkout';\r\nimport Profile from './container/Profile/Profile';\r\nimport EditProfile from './container/Profile/EditProfile';\r\nimport ProfileContextProvider from './contexts/ProfileContext';\r\nimport ParentReview from './container/Review/ParentReview'\r\nimport CreditCard from './container/CreditCard/PaymentCard/CreditCard';\r\nimport SearchPage from './container/SearchPage/SearchPage';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter history={history}>\r\n            <Switch>\r\n                <AuthContextProvider>\r\n                    <Route exact path='/signup' component={Signup} />\r\n                    <Route exact path='/signin' component={Signin} />\r\n                </AuthContextProvider>\r\n            </Switch>\r\n            <Switch>\r\n                <ProfileContextProvider>\r\n                    <Navbar />\r\n                    <Route exact path='/' component={Slide} />\r\n                    <Route exact path='/admin' component={AdminPanel} />\r\n                    <Route exact path='/edit' component={EditProduct} />\r\n                    <Route exact path='/list' component={ProductList} />\r\n                    <Route exact path='/details:id' component={ProductDetails} />\r\n                    <Route exact path=\"/cart\" component={Cart} />\r\n                    <Route exact path=\"/makeorder\" component={CreditCard} />\r\n                    <Route exact path=\"/search\" component={SearchPage} />\r\n                    <Route exact path=\"/wish\" component={Wish} />\r\n                    <Route exact path=\"/check\" component={Checkout} />\r\n                    <Route exact path='/profile' component={Profile} />\r\n                    <Route exact path='/review' component={ParentReview} />\r\n                    <Route exact path=\"/edit_profile\" component={EditProfile} />\r\n                </ProfileContextProvider>\r\n            </Switch>\r\n            <Footer />\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Signup\\Signup.jsx",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Signin\\Signin.jsx",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Home\\Slide\\Slide.jsx",["195","196","197","198","199","200","201"],"import React, { Component, useContext, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './Slide.css'\r\nimport slide1 from '../../../img/slide1.jpg'\r\nimport slide2 from '../../../img/slide2.jpg'\r\nimport slide3 from '../../../img/slide3.jpg'\r\nimport slide4 from '../../../img/slide4.jpg'\r\nimport slide6 from '../../../img/slide6.jpg'\r\nimport { profileContext } from \"../../../contexts/ProfileContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Slide = () =>{\r\n    const settings = {\r\n     arrows: false,\r\n      infinite: true,\r\n      autoplay: true,\r\n      speed: 2000,\r\n      autoplaySpeed: 2000,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n  const { getproductsData } = useContext(profileContext)\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [type, setType] = useState('');\r\n  const [page, setPage] = useState(1)\r\n  const history = useHistory();\r\n\r\n  function fetchParams(type, subType_like) {\r\n    const query = new URLSearchParams(history.location.search);\r\n    query.set(\"_page\", page);\r\n    query.set(\"type\", type);\r\n    query.set(\"subType_like\", subType_like);\r\n    history.push(\"/list\" + \"?\" + query)\r\n    getproductsData()\r\n  }\r\n    return (\r\n      <div>\r\n        <Slider {...settings} >\r\n          <div className='slide_div' >\r\n            <img className='slide_img' src={slide1} alt=\"#\" />\r\n            <div className='slide_btn'>\r\n              <h3>Гостинная</h3>\r\n              <button onClick={(e) => fetchParams(\"Гостинная\", \"\")} className='btn_item' >Узнать больше</button>\r\n            </div>\r\n          </div>\r\n          <div className='slide_div' >\r\n            <img className='slide_img' src={slide2} alt=\"#\" />\r\n            <div className='slide_btn'>\r\n              <h3>Спальня</h3>\r\n              <button onClick={(e) => fetchParams(\"Спальня\", \"\")} className='btn_item' >Узнать больше</button>\r\n            </div>\r\n          </div>\r\n          <div className='slide_div' >\r\n            <img className='slide_img' src={slide3} alt=\"#\" />\r\n            <div className='slide_btn'>\r\n              <h3>Столовая</h3>\r\n              <button onClick={(e) => fetchParams(\"Столовая\", \"\")} className='btn_item' >Узнать больше</button>\r\n            </div>\r\n          </div>\r\n          <div className='slide_div' >\r\n            <img className='slide_img' src={slide4} alt=\"#\" />\r\n            <div className='slide_btn'>\r\n              <h3>Ванная комната</h3>\r\n              <button onClick={(e) => fetchParams(\"Ванная комната\", \"\")} className='btn_item' >Узнать больше</button>\r\n            </div>\r\n          </div>\r\n          <div className='slide_div' >\r\n            <img className='slide_img' src={slide6} alt=\"#\" />\r\n            <div className='slide_btn'>\r\n              <h3>Посуда</h3>\r\n              <button onClick={(e) => fetchParams(\"Посуда\", \"\")} className='btn_item' >Узнать больше</button>\r\n            </div>\r\n          </div>\r\n        </Slider>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Slide;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Header\\Navbar\\Navbar.jsx",["202","203","204","205","206","207","208","209","210","211"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { fade, makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport logo from '../../../img/logo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport NavbarMenuType from './NavbarMenuType';\r\nimport './Navbar.css'\r\nimport { profileContext } from '../../../contexts/ProfileContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n        color:'inherit'\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        width:'50px',\r\n        // position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color:'inherit'\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        color:'inherit',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        padding: '0px'\r\n    },\r\n}));\r\nconst AccordionDetails = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiAccordionDetails);\r\n\r\nconst Navbar = () => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true)\r\n\r\n    const { productsCountInCart, productsCountInLiked } = useContext(profileContext);\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true)\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <Link to='/admin'>\r\n                <MenuItem onClick={handleMenuClose}>Admin</MenuItem>\r\n            </Link>\r\n            <Link to='/profile'>\r\n\r\n                <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            </Link>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n            color=\"inherit\"\r\n        >\r\n            <MenuItem>\r\n                <Link to='/cart' className='nav-links' onClick={closeMobileMenu}>\r\n                    <IconButton aria-label=\"add to shopping cart\">\r\n                        <Badge badgeContent={productsCountInCart} color=\"secondary\">\r\n                            <AddShoppingCartIcon color=\"inherit\" />\r\n                        </Badge >\r\n                        <p>Корзина</p>\r\n                    </IconButton>\r\n                </Link>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <Link to='/wish' className='nav-links' onClick={closeMobileMenu}>\r\n                    <IconButton>\r\n                        <Badge badgeContent={productsCountInLiked} color=\"secondary\">\r\n                            <FavoriteIcon />\r\n                        </Badge >\r\n                        <p>Избранное</p>\r\n                    </IconButton>\r\n                </Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle style={{color:'#fff'}} />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.grow} className={classes.root}>\r\n            <CssBaseline />\r\n            <div style={{ backgroundColor: 'rgb(37, 37, 43)', color: 'inherit', width: '100%', display: 'flex', justifyContent: 'space-between' }}\r\n                position=\"fixed\"\r\n            >\r\n                <div style={{ zIndex: '10', color:'inherit' }}><NavbarMenuType /></div>\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        <Link to='/'>\r\n                            <img src={logo} alt=\"\" style={{ width: '150px', height: '60px' }} />\r\n                        </Link>\r\n                    </Typography>\r\n\r\n                    <div className=\"search-nav\">\r\n                        <Link to=\"/search\" className=\"link\" >\r\n                            <div className={classes.searchIcon}>\r\n                            <SearchIcon style={{color: 'white'}}/>\r\n                        </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <Link to='/signin' className='nav-links' onClick={closeMobileMenu} >\r\n                            <IconButton aria-label=\"add to shopping cart\">\r\n                                    <Typography style={{color:'white'}}>Войти</Typography>\r\n                            </IconButton>\r\n                        </Link>\r\n                        <Link to='/cart' className='nav-links' onClick={closeMobileMenu} >\r\n                            <IconButton color=\"inherit\" aria-label=\"add to shopping cart\">\r\n                                <Badge badgeContent={productsCountInCart} color=\"secondary\">\r\n                                    <AddShoppingCartIcon style={{color:'#fff'}} />\r\n                                </Badge >\r\n                            </IconButton>\r\n                        </Link>\r\n                        <Link to='/wish' className='nav-links' onClick={closeMobileMenu} >\r\n                            <IconButton color=\"inherit\">\r\n                                <Badge badgeContent={productsCountInLiked} color=\"secondary\">\r\n                                    <FavoriteIcon style={{color:'#fff'}} />\r\n                                </Badge >\r\n                            </IconButton>\r\n                        </Link>\r\n\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle style={{color:'#fff'}} />\r\n                        </IconButton>\r\n\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </div >\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}\r\nexport default Navbar;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Footer\\Footer.jsx",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\helpers\\constants.jsx",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\helpers\\history.jsx",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\AdminPanel\\AddProduct.jsx",["212"],"import React, { useContext, useState } from 'react';\r\nimport './AddProduct.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { profileContext } from '../../contexts/ProfileContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: '17%'\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nconst AddProduct = () => {\r\n\r\n    const classes = useStyles();\r\n    const [type, setType] = React.useState('');\r\n    const [subType, setSubType] = React.useState('');\r\n\r\n    const handleChange5 = (event) => {\r\n        setType(event.target.value);\r\n    };\r\n    const handleChange6 = (event) => {\r\n        setSubType(event.target.value);\r\n    };\r\n\r\n    let { addTaskAdmin } = useContext(profileContext)\r\n    let [title, setTitle] = useState('')\r\n    let [img, setImg] = useState('')\r\n    let [description, setDescription] = useState('')\r\n    let [material, setMaterial] = useState('')\r\n    let [price, setPrice] = useState('')\r\n    let [isError, setError] = useState(false)\r\n\r\n    function handleSubType(type) {\r\n        if (type == '') return <div>Выберите тип:</div>\r\n        let obj = {\r\n            \"Посуда\": <FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={subType}\r\n                    onChange={handleChange6}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={subType}>\r\n                        <em>Посуда</em>\r\n                    </MenuItem>\r\n                    {['Посуда',\r\n                        'Стеклянная посуда',\r\n                        'Столовое приборы', 'Аксессуары для столов'].map(item => (\r\n                            <MenuItem key={item.id} value={item}>{item}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>,\r\n            \"Столовая\": <FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={subType}\r\n                    onChange={handleChange6}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={subType}>\r\n                        <em>Столовая</em>\r\n                    </MenuItem>\r\n                    {['Кухонная утварь',\r\n                        'Кухонные принадлежности',\r\n                        'Бытовая техника', \"Текстиль и аксессуары\", \"Книги\", \"Очистка\", \"Коврики\", \"Мебель и лампы\", ' '].map(item => (\r\n                            <MenuItem key={item.id} value={item}>{item}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>,\r\n            \"Гостинная\": <FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={subType}\r\n                    onChange={handleChange6}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={subType}>\r\n                        <em>Гостинная</em>\r\n                    </MenuItem>{[\"Мебель и лампы\",\r\n                        \"Зеркала\",\r\n                        \"Одеяла и подушки\", \"Шторы\", \"Книги\", \"Корзины\", \"Коврики\", \"Декор и аксессуары\", ' '].map(item => (\r\n                            <MenuItem key={item.id} value={item}>{item}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>,\r\n            \"Спальня\": <FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={subType}\r\n                    onChange={handleChange6}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={subType}>\r\n                        <em>Спальня</em>\r\n                    </MenuItem>{['Одеяла',\r\n                        'Полстельное белье',\r\n                        'Подушки', \"Декор и аксессуары\", \"Книги\", \"Корзины\", \"Зеркала\", \"Коврики\", \"Мебель\", ' '].map(item => (\r\n                            <MenuItem key={item.id} value={item}>{item}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>,\r\n            \"Ванная комната\": <FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={subType}\r\n                    onChange={handleChange6}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={subType}>\r\n                        <em>Ванная комната</em>\r\n                    </MenuItem>{['Мебель и корзины',\r\n                        'Зеркала',\r\n                        'Ванные коврики', \"Полотенца\", \"Шторы для ванной\", \"Банные халаты и слиперы\", \"Уход за телом\", \"Декор и аксессуары\", \"СПА-коллекция\", ' '].map(item => (\r\n                            <MenuItem key={item.id} value={item}>{item}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>\r\n\r\n        }\r\n\r\n        return obj[type]\r\n    }\r\n\r\n    function handleClick() {\r\n        if (!title || !type || !subType || !img || !price) {\r\n            setError(true)\r\n            return\r\n        } else {\r\n            setError(false)\r\n        }\r\n        let newObj = {\r\n            img: img,\r\n            title: title,\r\n            type: type,\r\n            subType: subType,\r\n            price: price,\r\n            description: description,\r\n            material: material,\r\n            rating: 0,\r\n            id: Date.now()\r\n        }\r\n        console.log(newObj)\r\n        addTaskAdmin(newObj)\r\n        setImg('')\r\n        setTitle('')\r\n        setType('')\r\n        setSubType('')\r\n        setPrice('')\r\n        setDescription('')\r\n        setMaterial('')\r\n    }\r\n    return (\r\n        <div className=\"add-product\" >\r\n            <h1 >Add product</h1>\r\n            <input style={isError ? { borderColor: 'red' } : { borderColor: 'white' }}\r\n                value={img} onChange={(e) => setImg(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Img\"\r\n            />\r\n            <input style={isError ? { borderColor: 'red' } : { borderColor: 'white' }}\r\n                value={title} onChange={(e) => setTitle(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n            />\r\n            <input style={isError ? { borderColor: 'red' } : { borderColor: 'white' }}\r\n                value={description} onChange={(e) => setDescription(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Description\"\r\n            />\r\n            <input style={isError ? { borderColor: 'red' } : { borderColor: 'white' }}\r\n                value={material} onChange={(e) => setMaterial(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Material\"\r\n            />\r\n\r\n            <FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={type}\r\n                    onChange={handleChange5}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={type}>\r\n                        <em>Тип</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"Столовая\">Столовая</MenuItem>\r\n                    <MenuItem value=\"Спальня\">Спальня</MenuItem>\r\n                    <MenuItem value=\"Гостинная\">Гостинная</MenuItem>\r\n                    <MenuItem value=\"Ванная комната\">Ванная комната</MenuItem>\r\n                    <MenuItem value=\"Посуда\">Посуда</MenuItem>\r\n                </Select>\r\n            </FormControl><br />\r\n            {handleSubType(type)}\r\n            <input style={isError ? { borderColor: 'red' } : { borderColor: 'white' }}\r\n                value={price} onChange={(e) => setPrice(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Price\"\r\n            />\r\n            <button variant=\"contained\" onClick={handleClick} className=\"btn-add\">Add Product</button>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n\r\n","C:\\Users\\User\\Desktop\\my-hackathon\\src\\contexts\\AuthContext.jsx",["213","214","215","216","217","218"],"import React, {useReducer} from 'react';\r\nimport { AUTH_API, JSON_API } from '../helpers/constants';\r\nimport axios from 'axios'\r\n\r\nexport const authContext = React.createContext();\r\nconst INIT_STATE = {\r\n    profile: [],\r\n    profToEdit: null,\r\n    comment: []\r\n};\r\n\r\nconst reducer = (state=INIT_STATE, action) => {\r\n    switch(action.type){\r\n        case \"GET_CONTACTS_DATA\":\r\n            return { ...state, comment: action.payload }\r\n\r\n    }\r\n}\r\nconst AuthContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, INIT_STATE)\r\n\r\n    async function registerUser(e, history){\r\n        e.preventDefault()\r\n        const newUser = {\r\n            email: e.target[4].value,\r\n            password: e.target[6].value\r\n        }\r\n        try{\r\n            const res = await axios.post(`${AUTH_API}/api/auth/register`, newUser)\r\n            history.push('/signin')\r\n        }catch{\r\n            alert('Некорректная почта или пароль')\r\n        }\r\n    }\r\n    async function loginUser (e, history){\r\n        e.preventDefault()\r\n        const newUser = {\r\n            email: e.target[0].value,\r\n            password: e.target[2].value\r\n        }\r\n        try{\r\n            const res = await axios.post(`${AUTH_API}/api/auth/login`, newUser)\r\n            history.push(\"/list\")  \r\n        }catch{\r\n            alert('Некорректная почта или пароль')\r\n        }\r\n    }\r\n    function hasAccount(history) {\r\n        history.push(\"/signin\");\r\n      }\r\n    function hasnotAccount(history) {\r\n    history.push(\"/signup\");\r\n    }\r\n    \r\n    return (\r\n        <authContext.Provider value ={{\r\n            registerUser,\r\n            hasAccount,\r\n            hasnotAccount,\r\n            loginUser\r\n        }}>\r\n            {children}\r\n        </authContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContextProvider;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\contexts\\ProductContext.jsx",["219"],"// import React, { useReducer } from 'react';\r\n// import axios from 'axios'\r\n\r\n// // import { calcTotalPrice } from '../helpers/CalcPrice';\r\n// // import { calcSubPrice } from '../helpers/CalcPrice';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\n// export const productContext = React.createContext();\r\n\r\n// const INIT_STATE = {\r\n//     products: [],\r\n//     productToEdit: null,\r\n//     // productToDetails: null,\r\n//     pageCount: 4,\r\n//     page: 1,\r\n//     totalCount: 0,\r\n//     // productsCountInCart: JSON.parse(localStorage.getItem('cart')) ? JSON.parse(localStorage.getItem('cart')).products.length : 0,\r\n//     // productsCountInLiked: JSON.parse(localStorage.getItem('liked')) ? JSON.parse(localStorage.getItem('liked')).products.length : 0\r\n// }\r\n\r\n\r\n// const reducer = (state = INIT_STATE, action) => {\r\n//     switch (action.type) {\r\n//         case \"CET_CONTACTS_DATA\":\r\n//             return { ...state, products: action.payload }\r\n//         case \"EDIT_TODO\":\r\n//             return { ...state, productToEdit: action.payload }\r\n//         // case \"DETAILS_TODO\":\r\n//         //     return { ...state, productToDetails: action.payload }\r\n//         case \"CONTACTS_SET_PAGE\":\r\n//             return { ...state, page: action.page }\r\n//         case \"SET_TOTAL_COUNT\":\r\n//                 return { ...state, totalCount: action.payload };\r\n//         // case \"ADD_AND_DELETE_PRODUCT_IN_CART\":\r\n//         //     return { ...state, productsCountInCart: action.payload }\r\n//         // case \"GET_CART\":\r\n//         //     return { ...state, cartData: action.payload }\r\n//         // case \"DELETE_ITEM\":\r\n//         //     return { ...state, cartData: action.payload }\r\n//         // case \"ADD_AND_DELETE_PRODUCT_IN_LIKED\":\r\n//         //     return { ...state, productsCountInLiked: action.payload }\r\n//         // case \"GET_LIKED\":\r\n//         //     return { ...state, likeData: action.payload }\r\n//         // default: return state\r\n//     }\r\n// }\r\n\r\n// const ProductContextProvider = ({ children }) => { //оборачивает в чилдрен\r\n//     const [state, dispatch] = useReducer(reducer, INIT_STATE)\r\n//     const history = useHistory();\r\n\r\n\r\n//     const pageTask = async (page) => {\r\n//         const search = new URLSearchParams(window.location.search);\r\n//         search.set(\"_page\", page);\r\n//         search.set(\"_limit\", 4);\r\n//         history.replace(window.location.pathname + \"?\" + search.toString());\r\n//         getproductsData()\r\n//     }\r\n//     const pageAdmin = async (page) => {\r\n//         const search = new URLSearchParams(window.location.search);\r\n//         search.set(\"_page\", page);\r\n//         search.set(\"_limit\", 4);\r\n//         history.replace(window.location.pathname + \"?\" + search.toString());\r\n//         getproductsAdmin()\r\n//     }\r\n\r\n//     const getproductsData = async () => {\r\n//         let params = new URLSearchParams(window.location.search);\r\n//         if (!params.get(\"_page\")) params.set(\"_page\", 1);\r\n//         if (!params.get(\"_limit\")) params.set(\"_limit\", 4);\r\n//         history.push(\"/list?\" + params);\r\n//         let { data, headers } = await axios(`http://localhost:8000/products?${params}`);\r\n//         dispatch({\r\n//             type: \"SET_TOTAL_COUNT\",\r\n//             payload: parseInt(headers[\"x-total-count\"])\r\n//         })\r\n//         dispatch({\r\n//             type: \"CET_CONTACTS_DATA\",\r\n//             payload: data\r\n//         })\r\n//     }\r\n//     // const getproductsDataRating = async (id) => {\r\n//     //     let { data, headers } = await axios(`http://localhost:8000/products?${id}`);\r\n//     //     dispatch({\r\n//     //         type: \"CET_CONTACTS_DATA\",\r\n//     //         payload: data\r\n//     //     })\r\n//     // }\r\n//     const getproductsAdmin = async () => {\r\n//         let params = new URLSearchParams(window.location.search);\r\n//         if (!params.get(\"_page\")) params.set(\"_page\", 1);\r\n//         if (!params.get(\"_limit\")) params.set(\"_limit\", 4);\r\n//         history.push(\"/admin?\" + params);\r\n//         let { data, headers } = await axios(`http://localhost:8000/products?${params}`);\r\n//         dispatch({\r\n//             type: \"SET_TOTAL_COUNT\",\r\n//             payload: parseInt(headers[\"x-total-count\"])\r\n//         })\r\n//         dispatch({\r\n//             type: \"CET_CONTACTS_DATA\",\r\n//             payload: data\r\n//         })\r\n//     }\r\n\r\n\r\n//     const addTask = async (newTask) => {\r\n//         await axios.post('http://localhost:8000/products', newTask)\r\n//         getproductsAdmin()\r\n//     }\r\n\r\n//     const deleteTask = async (id) => {\r\n//         await axios.delete(`http://localhost:8000/products/${id}`)\r\n//         getproductsAdmin()\r\n//     }\r\n\r\n//     const editTodo = async (id) => {\r\n//         let { data } = await axios(`http://localhost:8000/products/${id}`)\r\n//         dispatch({\r\n//             type: \"EDIT_TODO\",\r\n//             payload: data\r\n//         })\r\n//     }\r\n\r\n//     // const detailsTodo = async (id) => {\r\n//     //     let { data } = await axios(`http://localhost:8000/products/${id}`)\r\n//     //     dispatch({\r\n//     //         type: \"DETAILS_TODO\",\r\n//     //         payload: data\r\n//     //     })\r\n//     // }\r\n\r\n//     const saveTask = async (newTask, history) => {\r\n//         try {\r\n//             await axios.patch(`http://localhost:8000/products/${newTask.id}`, newTask)\r\n//             history.push('/admin')\r\n//         } catch (error) {\r\n//             history.push('/error')\r\n//         }\r\n//     }\r\n\r\n//     // function addAndDeleteProductInCart(product) {\r\n//     //     let cart = JSON.parse(localStorage.getItem('cart'));\r\n//     //     if (!cart) {\r\n//     //         cart = {\r\n//     //             products: [],\r\n//     //             totalPrice: 0\r\n//     //         };\r\n//     //     }\r\n//     //     let newProduct = {\r\n//     //         product: product,\r\n//     //         count: 1,\r\n//     //         subPrice: 0\r\n//     //     }\r\n\r\n//     //     newProduct.subPrice = calcSubPrice(newProduct)\r\n//     //     let newCart = cart.products.filter(item => item.product.id === product.id)\r\n//     //     if (newCart.length > 0) {\r\n//     //         cart.products = cart.products.filter(item => item.product.id !== product.id)\r\n//     //     } else {\r\n//     //         cart.products.push(newProduct)\r\n//     //     }\r\n//     //     cart.totalPrice = calcTotalPrice(cart.products)\r\n//     //     localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n//     //     dispatch({\r\n//     //         type: \"ADD_AND_DELETE_PRODUCT_IN_CART\",\r\n//     //         payload: cart.products.length\r\n//     //     })\r\n\r\n//     // }\r\n\r\n//     // function checkProductInCart(id) {\r\n//     //     let cart = JSON.parse(localStorage.getItem('cart'));\r\n//     //     if (!cart) {\r\n//     //         cart = {\r\n//     //             products: [],\r\n//     //             totalPrice: 0\r\n//     //         }\r\n//     //     }\r\n//     //     let newCart = cart.products.filter(item => item.product.id === id)\r\n//     //     return newCart.length > 0 ? true : false\r\n//     // }\r\n\r\n//     // function getCart() {\r\n//     //     let cart = JSON.parse(localStorage.getItem('cart'));\r\n//     //     dispatch({\r\n//     //         type: \"GET_CART\",\r\n//     //         payload: cart\r\n//     //     })\r\n//     // }\r\n//     // function changeCountProducts(count, id) {\r\n//     //     let cart = JSON.parse(localStorage.getItem('cart'));\r\n//     //     cart.products = cart.products.map(item => {\r\n//     //         if (item.product.id === id) {\r\n//     //             item.count = count\r\n//     //             item.subPrice = calcSubPrice(item)\r\n//     //         }\r\n//     //         return item\r\n//     //     })\r\n//     //     cart.totalPrice = calcTotalPrice(cart.products)\r\n//     //     localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n//     //     getCart()\r\n//     // }\r\n\r\n//     // function makeOrder() {\r\n//     //     let cart = JSON.parse(localStorage.getItem('cart'))\r\n//     //     console.log(cart)\r\n//     // }\r\n\r\n//     // async function ratingProduct(id, rating) {\r\n//     //     console.log(id,rating);\r\n//     //     await axios.patch(`http://localhost:8000/products/${id}`, {rating: rating})\r\n//     //     getproductsDataRating()\r\n//     // }\r\n\r\n//     // function deleteItem(id) {\r\n//     //     console.log('ID', id);\r\n//     //     let cart = JSON.parse(localStorage.getItem('cart'))\r\n//     //     cart.products = cart.products.filter(item => item.product.id !== id)\r\n//     //     localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n//     //     getCart()\r\n//     // }\r\n\r\n//     // function addAndDeleteProductInLiked(product) {\r\n//     //     let liked = JSON.parse(localStorage.getItem('liked'));\r\n//     //     if (!liked) {\r\n//     //         liked = {\r\n//     //             products: []\r\n//     //         };\r\n//     //     }\r\n//     //     let newProduct = {\r\n//     //         product: product\r\n//     //     }\r\n//     //     let newLiked = liked.products.filter(item => item.product.id === product.id)\r\n//     //     if (newLiked.length > 0) {\r\n//     //         liked.products = liked.products.filter(item => item.product.id !== product.id)\r\n//     //     } else {\r\n//     //         liked.products.push(newProduct)\r\n//     //     }\r\n//     //     liked.totalPrice = calcTotalPrice(liked.products)\r\n//     //     localStorage.setItem(\"liked\", JSON.stringify(liked))\r\n//     //     dispatch({\r\n//     //         type: \"ADD_AND_DELETE_PRODUCT_IN_LIKED\",\r\n//     //         payload: liked.products.length\r\n//     //     })\r\n\r\n//     // }\r\n\r\n//     // function checkProductInLiked(id) {\r\n//     //     let liked = JSON.parse(localStorage.getItem('liked'));\r\n//     //     if (!liked) {\r\n//     //         liked = {\r\n//     //             products: [],\r\n//     //             totalPrice: 0\r\n//     //         }\r\n//     //     }\r\n//     //     let newLiked = liked.products.filter(item => item.product.id === id)\r\n//     //     return newLiked.length > 0 ? true : false\r\n\r\n//     // }\r\n\r\n//     // function getLiked() {\r\n//     //     let liked = JSON.parse(localStorage.getItem('liked'));\r\n//     //     dispatch({\r\n//     //         type: \"GET_LIKED\",\r\n//     //         payload: liked\r\n//     //     })\r\n//     // }\r\n\r\n//     // function deleteItemInLiked(id) {\r\n//     //     console.log('ID', id);\r\n//     //     let liked = JSON.parse(localStorage.getItem('liked'))\r\n//     //     liked.products = liked.products.filter(item => item.product.id !== id)\r\n//     //     localStorage.setItem(\"liked\", JSON.stringify(liked))\r\n//     //     getLiked()\r\n//     // }\r\n//     return (\r\n//         <productContext.Provider value={{\r\n//             products: state.products,\r\n//             productToEdit: state.productToEdit,\r\n//             // productToDetails: state.productToDetails,\r\n//             page: state.page,\r\n//             // productsCountInCart: state.productsCountInCart,\r\n//             // productsCountInLiked: state.productsCountInLiked,\r\n//             totalCount: state.totalCount,\r\n//             // cartData: state.cartData,\r\n//             // likeData: state.likeData,\r\n//             // deleteItemInLiked,\r\n//             // getLiked,\r\n//             // addAndDeleteProductInLiked,\r\n//             // checkProductInLiked,\r\n//             addTask,\r\n//             getproductsData,\r\n//             // getproductsDataRating,\r\n//             getproductsAdmin,\r\n//             pageAdmin,\r\n//             // addAndDeleteProductInCart,\r\n//             // checkProductInCart,\r\n//             deleteTask,\r\n//             editTodo,\r\n//             // detailsTodo,\r\n//             // deleteItem,\r\n//             saveTask,\r\n//             pageTask,\r\n//             // getCart,\r\n//             // makeOrder,\r\n//             // changeCountProducts,\r\n//             // ratingProduct\r\n//         }}>\r\n//             {children}\r\n//         </productContext.Provider>\r\n//     )\r\n// }\r\n\r\n// export default ProductContextProvider;\r\n","C:\\Users\\User\\Desktop\\my-hackathon\\src\\helpers\\CalcPrice.jsx",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\AdminPanel\\AdminPanel.jsx",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\AdminPanel\\AdminList.jsx",["220","221","222"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport './AdminList.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { profileContext } from '../../contexts/ProfileContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: \"25vh\",\r\n        paddingTop: '56.25%',\r\n        backgroundSize: \"contain\"\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst AdminList = () => {\r\n    // const [state, setState]= useState([])\r\n    const classes = useStyles();\r\n\r\n    const { getproductsAdmin, detailsTodo, totalCount, products, deleteTaskAdmin, editTodo, pageAdmin, } = useContext(profileContext)\r\n\r\n    useEffect(() => {\r\n        getproductsAdmin()\r\n    }, [])\r\n    const history = useHistory();\r\n    const search = new URLSearchParams(history.location.search);\r\n    return (\r\n        <>\r\n            <div className=\"product-card-admin\">\r\n                {products.map(item => (\r\n                    <Card className={classes.root} key={item.id} className=\"cardd\">\r\n                        <CardHeader\r\n                            title={<Typography variant=\"h5\" align=\"center\">{item.title}</Typography>}\r\n                        />\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={item.img}\r\n                        />\r\n                        <CardActions style={{ justifyContent: \"space-around\" }}>\r\n                            <Typography variant=\"h5\">\r\n                                {item.price} сом\r\n                            </Typography>\r\n\r\n                            <IconButton aria-label=\"delete\" color=\"primary\" onClick={() => deleteTaskAdmin(item.id)}><DeleteIcon /></IconButton>\r\n                            <Link to=\"/edit\">\r\n                                <IconButton variant=\"outlined\" color=\"primary\" className=\"btn-edit\" onClick={() => editTodo(item.id)}><CreateIcon /></IconButton>\r\n                            </Link>\r\n                            <Link to=\"/details\">\r\n                                <Button onClick={() => detailsTodo(item.id)} variant=\"contained\" color=\"primary\" style={{ width: \"50px\", height: \"26px\", fontSize: \"10px\" }} >Details</Button>\r\n                            </Link>\r\n                        </CardActions>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n            <Pagination onChange={(e, newpage) => pageAdmin(newpage)} page={parseInt(search.get(\"_page\")) || 1} count={Math.ceil(totalCount / 3)} defaultPage={1} />\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default AdminList;\r\n\r\n","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\AdminPanel\\EditProduct.jsx",["223","224","225","226","227","228","229","230","231","232","233","234"],"\r\nimport { Grid, Paper } from '@material-ui/core';\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { productContext } from '../../contexts/ProductContext'\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport './AdminList.css';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: \"25vh\",\r\n        paddingTop: '56.25%',\r\n        backgroundSize: \"contain\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: '70%',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nconst EditProduct = (props) => {\r\n    const { productToEdit, saveTask, products, getproductsAdmin } = useContext(productContext)\r\n    const [newEditItem, setNewEditItem] = useState(productToEdit)\r\n    const classes = useStyles();\r\n    // const [subType, setsubType] = React.useState('');\r\n    // const [subType, setsubType] = React.useState('');\r\n    // const [subType, setsubType] = React.useState('');\r\n    // const [subType, setsubType] = React.useState('');\r\n    // const [subType, setsubType] = React.useState('');\r\n    const [type, setType] = React.useState('');\r\n    const [subType, setSubType] = React.useState('');\r\n    useEffect(() => { // говорит, как ток productToEdit поменяется, закидывай в newEditItem productToEdit, замени все что там находится\r\n        setNewEditItem(productToEdit)\r\n    }, [productToEdit])\r\n\r\n    // console.log(productToEdit)\r\n    function handleEditInput1(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            img: e.target.value\r\n        }\r\n        setNewEditItem(newObj);\r\n    }\r\n    function handleEditInput2(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            title: e.target.value\r\n        }\r\n        setNewEditItem(newObj);\r\n    }\r\n    function handleEditInput3(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            type: e.target.value\r\n        }\r\n        setNewEditItem(newObj);\r\n    }\r\n    function handleEditInput4(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            subType: e.target.value\r\n        }\r\n        setNewEditItem(newObj);\r\n    }\r\n    function handleEditInput9(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            price: e.target.value\r\n        }\r\n        setNewEditItem(newObj);\r\n    }\r\n    function selectionSubType(type) {\r\n        if (type == 'Столовая') {\r\n            return (<FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={subType}\r\n                    onChange={handleEditInput4}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={subType}>\r\n                    {newEditItem.subType}\r\n                    </MenuItem>\r\n                    {['Кухонная утварь',\r\n                        'Кухонные принадлежности',\r\n                        'Бытовая техника', \"Текстиль и аксессуары\", \"Книги\", \"Очистка\", \"Коврики\", \"Мебель и лампы\", ' '].map(item => (\r\n                            <MenuItem key={item.id} value={item}>{item}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>)\r\n        } else if (type == 'Посуда') {\r\n            return (<FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={subType}\r\n                    onChange={handleEditInput4}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={subType}>\r\n                    {newEditItem.subType}\r\n                    </MenuItem>\r\n                    {['Посуда',\r\n                        'Стеклянная посуда',\r\n                        'Столовые приборы'].map(item => (\r\n                            <MenuItem key={item.id} value={item}>{item}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>)\r\n        } else if (type == 'Гостинная') {\r\n            return (<FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={subType}\r\n                    onChange={handleEditInput4}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={subType}>\r\n                    {newEditItem.subType}\r\n                    </MenuItem>{[\"Мебель и лампы\",\r\n                        \"Зеркала\",\r\n                        \"Одеяла и подушки\", \"Шторы\", \"Книги\", \"Корзины\", \"Коврики\", \"Декор и аксессуары\", ' '].map(item => (\r\n                            <MenuItem key={item.id} value={item}>{item}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>)\r\n        } else if (type == 'Спальня') {\r\n            return (<FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={subType}\r\n                    onChange={handleEditInput4}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={subType}>\r\n                    {newEditItem.subType}\r\n                    </MenuItem>{['Одеяла',\r\n                        'Полстельное белье',\r\n                        'Подушки', \"Декор и аксессуары\", \"Книги\", \"Корзины\", \"Зеркала\", \"Коврики\", \"Мебель\", ' '].map(item => (\r\n                            <MenuItem key={item.id} value={item}>{item}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>)\r\n        } else if (type == 'Ванная комната') {\r\n            return (<FormControl className={classes.formControl} >\r\n                <Select\r\n                    style={{ textAlign: 'left' }}\r\n                    value={subType}\r\n                    onChange={handleEditInput4}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem value={subType}>\r\n                    {newEditItem.subType}\r\n                    </MenuItem>{['Мебель и корзины',\r\n                        'Зеркала',\r\n                        'Ванные коврики', \"Полотенца\", \"Шторы для ванной\", \"Банные халаты и слиперы\", \"Уход за телом\", \"Декор и аксессуары\", \"СПА-коллекция\", ' '].map(item => (\r\n                            <MenuItem key={item.id} value={item}>{item}</MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', justifyContent:'center'}}>\r\n        <Grid item xs={12} sm={6}>\r\n            <Paper style={{ textAlign: 'center', margin: '60px 50px' }}>\r\n                {newEditItem ?\r\n                    <>\r\n                        <h2>Edit</h2>\r\n                        <span>Image</span><Input style={{ width: '70%', margin: '10px 40px' }} onChange={handleEditInput1} value={newEditItem.img} type=\"text\" /><br />\r\n                        <span>Title</span><Input style={{ width: '70%', margin: '10px 40px' }} onChange={handleEditInput2} value={newEditItem.title} type=\"text\" /><br />\r\n                        {/* <span>Тип</span><Input style={{width: '70%', margin: '10px 40px'}} onChange={handleEditInput3} value={newEditItem.type} type=\"text\"/><br/> */}\r\n                        <span>Price</span><Input style={{ width: '70%', margin: '10px 40px' }} onChange={handleEditInput9} value={newEditItem.price} type=\"text\" /><br />\r\n                        <span>Тип</span><FormControl className={classes.formControl} >\r\n                            <Select\r\n                                style={{ textAlign: 'left' }}\r\n                                value={newEditItem.type}\r\n                                onChange={handleEditInput3}\r\n                                displayEmpty\r\n                                className={classes.selectEmpty}\r\n                                inputProps={{ 'aria-label': 'Without label' }}\r\n                            >\r\n                                <MenuItem value={type}>\r\n                                    <em>Тип</em>\r\n                                </MenuItem>\r\n                                <MenuItem value=\"Столовая\">Столовая</MenuItem>\r\n                                <MenuItem value=\"Спальня\">Спальня</MenuItem>\r\n                                <MenuItem value=\"Гостинная\">Гостинная</MenuItem>\r\n                                <MenuItem value=\"Ванная комната\">Ванная комната</MenuItem>\r\n                                <MenuItem value=\"Посуда\">Посуда</MenuItem>\r\n                            </Select>\r\n                        </FormControl><br />\r\n                        {/* <span>Столовая</span><Input style={{width: '70%', margin: '10px 40px'}} onChange={handleEditInput4} value={newEditItem.subType} type=\"text\"/><br/>\r\n                    <span>Гостинная</span><Input style={{width: '70%', margin: '10px 40px'}} onChange={handleEditInput5} value={newEditItem.subType} type=\"text\"/><br/>\r\n                    <span>Ванная комната</span><Input style={{width: '70%', margin: '10px 40px'}} onChange={handleEditInput6} value={newEditItem.subType} type=\"text\"/><br/>\r\n                    <span>Спальня</span><Input style={{width: '70%', margin: '10px 40px'}} onChange={handleEditInput7} value={newEditItem.subType} type=\"text\"/><br/>\r\n                    <span>Посуда</span><Input style={{width: '70%', margin: '10px 40px'}} onChange={handleEditInput4} value={newEditItem.subType} type=\"text\"/><br/> */}\r\n                        <span>Подтип</span>{selectionSubType(newEditItem.type)}<br />\r\n                        <Button style={{ margin: '15px' }} variant=\"contained\" color=\"primary\" onClick={() => saveTask(newEditItem, props.history)} className=\"btn-save\">Save</Button>\r\n                    </>\r\n                    : <h1>Loading</h1>}\r\n            </Paper>\r\n        </Grid>\r\n                <div className=\"product-card-admin\">\r\n             \r\n                    <Card className={classes.root} className=\"cardd\">\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            // image={productToEdit.img}\r\n                        />\r\n                    </Card>\r\n               \r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default EditProduct;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Header\\Navbar\\NavbarMenuType.jsx",["235","236","237","238","239","240","241","242","243"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport './NavbarMenuType.css'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { profileContext } from '../../../contexts/ProfileContext';\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0, 0, 0, .03)',\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n    minHeight: 56,\r\n    '&$expanded': {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiAccordionDetails);\r\n\r\nconst NavbarMenuType = (props) => {\r\n  const { getproductsData } = useContext(profileContext)\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [type, setType] = useState('');\r\n  const [page, setPage] = useState(1)\r\n  const history = useHistory();\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    console.log(panel, isExpanded);\r\n    setType(panel)\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n\r\n  function fetchParams(type, subType_like) {\r\n    const query = new URLSearchParams(history.location.search);\r\n    query.set(\"_page\", page);\r\n    query.set(\"type\", type);\r\n    query.set(\"subType_like\", subType_like);\r\n    history.push(\"/list\" + \"?\" + query)\r\n    getproductsData()\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input id=\"menu__toggle\" type=\"checkbox\" />\r\n        <label className=\"menu__btn\" htmlFor=\"menu__toggle\">\r\n          <span></span>\r\n        </label>\r\n        <ul className=\"menu__box\">\r\n          <Link to='/' style={{ textDecoration: 'none' }}>\r\n            <li><span className=\"menu__item\" href=\"#\">Главная</span></li>\r\n          </Link>\r\n          <Accordion square expanded={expanded === 'Гостинная'} onChange={handleChange('Гостинная')}>\r\n            <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n              <li><a className=\"menu__item\" href=\"#\">Гостинная</a></li>\r\n            </AccordionSummary>\r\n            <div>\r\n              <AccordionDetails onClick={(e) => fetchParams(\"Гостинная\", \"\")}><Typography>All</Typography></AccordionDetails>\r\n              <AccordionDetails onClick={(e) => fetchParams(\"Гостинная\", \"Мебель и лампы\")}><Typography> Мебель и лампы</Typography></AccordionDetails>\r\n              <AccordionDetails onClick={(e) => fetchParams(\"Гостинная\", \"Зеркала\")}><Typography> Зеркала</Typography></AccordionDetails>\r\n              <AccordionDetails onClick={(e) => fetchParams(\"Гостинная\", \"Одеяла и подушки\")}><Typography> Одеяла и подушки</Typography></AccordionDetails>\r\n              <AccordionDetails onClick={(e) => fetchParams(\"Гостинная\", \"Шторы\")}><Typography> Шторы</Typography></AccordionDetails>\r\n              <AccordionDetails onClick={(e) => fetchParams(\"Гостинная\", \"Книги\")}><Typography> Книги</Typography></AccordionDetails>\r\n              <AccordionDetails onClick={(e) => fetchParams(\"Гостинная\", \"Корзины\")}><Typography> Корзины</Typography></AccordionDetails>\r\n              <AccordionDetails onClick={(e) => fetchParams(\"Гостинная\", \"Коврики\")}><Typography> Коврики</Typography></AccordionDetails>\r\n              <AccordionDetails onClick={(e) => fetchParams(\"Гостинная\", \"Декор и аксессуары\")}><Typography> Декор и аксессуары</Typography></AccordionDetails>\r\n            </div>\r\n          </Accordion>\r\n          <Accordion square expanded={expanded === 'Спальня'} onChange={handleChange('Спальня')}>\r\n            <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n              <li><a className=\"menu__item\" href=\"#\">Спальня</a></li>\r\n            </AccordionSummary>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Спальня\", \"\")}><Typography>All</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Спальня\", \"Одеяла\")} ><Typography> Одеяла</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Спальня\", \"Полстельное белье\")} ><Typography> Полстельное белье</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Спальня\", \"Подушки\")} ><Typography> Подушки</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Спальня\", \"Декор и аксессуары\")} ><Typography> Декор и аксессуары</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Спальня\", \"Книги\")} ><Typography> Книги</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Спальня\", \"Корзины\")} ><Typography> Корзины</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Спальня\", \"Зеркала\")} ><Typography> Зеркала</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Спальня\", \"Коврики\")}><Typography> Коврики</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Спальня\", \"Мебель\")} ><Typography> Мебель</Typography></AccordionDetails>\r\n          </Accordion>\r\n          <Accordion square expanded={expanded === 'Столовая'} onChange={handleChange('Столовая')}>\r\n            <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n              <li><a className=\"menu__item\" href=\"#\">Столовая</a></li>\r\n            </AccordionSummary>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Столовая\", \"\")}><Typography>All</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Столовая\", \"Кухонная утварь\")} ><Typography> Кухонная утварь</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Столовая\", \"Кухонные принадлежности\")} ><Typography> Кухонные принадлежности</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Столовая\", \"Бытовая техника\")} ><Typography> Бытовая техника</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Столовая\", \"Текстиль и аксессуары\")} ><Typography> Текстиль и аксессуары</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Столовая\", \"Книги\")} ><Typography> Книги</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Столовая\", \"Очистка\")} ><Typography> Очистка</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Столовая\", \"Мебель и лампы\")} ><Typography> Мебель и лампы</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Столовая\", \"Коврики\")}><Typography> Коврики</Typography></AccordionDetails>\r\n          </Accordion>\r\n          <Accordion square expanded={expanded === 'Ванная комната'} onChange={handleChange('Ванная комната')}>\r\n            <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n              <li><a className=\"menu__item\" href=\"#\">Ванная комната</a></li>\r\n            </AccordionSummary>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"\")}><Typography>All</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"Мебель и корзины\")} ><Typography> Мебель и корзины</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"Полстельное белье\")} ><Typography> Полстельное белье</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"Ванные коврики\")} ><Typography> Ванные коврики</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"Шторы для ванной\")} ><Typography> Шторы для ванной</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"Полотенца\")} ><Typography> Полотенца</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"Банные халаты и слиперы\")} ><Typography> Банные халаты и слиперы</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"Зеркала\")} ><Typography> Зеркала</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"Уход за телом\")}><Typography> Уход за телом</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"Декор и аксессуары\")} ><Typography> Декор и аксессуары</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Ванная комната\", \"СПА-коллекция\")} ><Typography> СПА-коллекция</Typography></AccordionDetails>\r\n          </Accordion>\r\n          <Accordion square expanded={expanded === 'Посуда'} onChange={handleChange('Посуда')}>\r\n            <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n              <li><a className=\"menu__item\" href=\"#\">Посуда</a></li>\r\n            </AccordionSummary>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Посуда\", \"\")}><Typography>All</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Посуда\", \"Посуда\")} ><Typography> Посуда</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Посуда\", \"Столовые приборы\")} ><Typography> Столовые приборы</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Посуда\", \"Столовое белье\")} ><Typography> Столовое белье</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Посуда\", \"Аксессуары для столов\")} ><Typography> Аксессуары для столов</Typography></AccordionDetails>\r\n            <AccordionDetails onClick={(e) => fetchParams(\"Посуда\", \"Книги\")} ><Typography> Книги</Typography></AccordionDetails>\r\n          </Accordion>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarMenuType;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Product\\ProductList.jsx",["244","245","246","247","248","249"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport './ProductList.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport ProductCard from './ProductCard'\r\nimport { profileContext } from '../../contexts/ProfileContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    media: {\r\n        height: \"25vh\",\r\n        // width: \"50vh\",\r\n        paddingTop: '56.25%',\r\n        backgroundSize: \"cover\"\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst AdminList = () => {\r\n    const classes = useStyles();\r\n    const { products, getproductsData, totalCount, pageTask, } = useContext(profileContext)\r\n    useEffect(() => {\r\n        getproductsData()\r\n    }, [])\r\n    console.log(products)\r\n    const history = useHistory();\r\n    const search = new URLSearchParams(history.location.search);\r\n    return (\r\n        <>\r\n            <div className=\"product-list\" >\r\n                {products.map(item => (\r\n                    <ProductCard item={item} key={item.id} />\r\n                    ))}\r\n            </div>\r\n            <Pagination onChange={(e, newpage) => pageTask(newpage)} page={parseInt(search.get(\"_page\")) || 1} count={Math.ceil(totalCount / 3)} defaultPage={1} />\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default AdminList;\r\n\r\n","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Product\\ProductDetails.jsx",["250","251","252","253","254","255"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport './ProductDetails.css'\r\nimport { profileContext } from '../../contexts/ProfileContext';\r\n\r\nconst StyledRating = withStyles({\r\n    iconFilled: {\r\n        color: '#ff6d75',\r\n    },\r\n    iconHover: {\r\n        color: '#ff3d47',\r\n    },\r\n})(Rating);\r\n\r\nconst customIcons = {\r\n    1: {\r\n        icon: <SentimentVeryDissatisfiedIcon />,\r\n        label: 'Very Dissatisfied',\r\n    },\r\n    2: {\r\n        icon: <SentimentDissatisfiedIcon />,\r\n        label: 'Dissatisfied',\r\n    },\r\n    3: {\r\n        icon: <SentimentSatisfiedIcon />,\r\n        label: 'Neutral',\r\n    },\r\n    4: {\r\n        icon: <SentimentSatisfiedAltIcon />,\r\n        label: 'Satisfied',\r\n    },\r\n    5: {\r\n        icon: <SentimentVerySatisfiedIcon />,\r\n        label: 'Very Satisfied',\r\n    },\r\n};\r\nfunction IconContainer(props) {\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{customIcons[value].icon}</span>;\r\n}\r\n\r\nIconContainer.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: 30,\r\n        // padding: 0,\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    container1: {\r\n        marginLeft: 0,\r\n        padding: 10,\r\n    },\r\n}))\r\nconst ProductDetails = (props) => {\r\n    const classes = useStyles();\r\n    const { productToDetails, detailsTodo, ratingProduct, addAndDeleteProductInCart, checkProductInCart, addAndDeleteProductInLiked, checkProductInLiked } = useContext(profileContext)\r\n    const [rating, setRating] = useState(0)\r\n    useEffect(() => {\r\n        detailsTodo(props.match.params.id)\r\n    }, [])\r\n    function handleRating(id, e) {\r\n        console.log(id)\r\n        console.log(e)\r\n        ratingProduct(id, e)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            {productToDetails != null ?\r\n                <Container className={classes.container} >\r\n                    <Container className={classes.container1} maxWidth=\"sm\">\r\n                        <div><img className='img_details' src={productToDetails.img} alt=\"\" /></div>\r\n                    </Container>\r\n                    <Container className='detal' className={classes.container1}>\r\n                        <div>\r\n                            <p className='item_details1' >{productToDetails.title}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p className='item_details2' ><span className='span_details'>Цена:     </span>    {productToDetails.price} сом</p>\r\n                        </div>\r\n                        <div>\r\n                            <p className='item_details3' ><span className='span_details'>Тип:     </span>    {productToDetails.type}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p className='item_details3' ><span className='span_details'>Подтив:     </span>    {productToDetails.subType}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p className='item_details3' ><span className='span_details'>Материал:     </span>    {productToDetails.material}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p className='item_details4'><span className='span_details'>Описание:     </span>    {productToDetails.description}</p>\r\n                        </div>\r\n                        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                            <Rating\r\n                                name=\"customized-empty\"\r\n                                defaultValue={productToDetails.rating}\r\n                                onChange={(e) => handleRating(productToDetails.id, e.target.value)}\r\n                                precision={0.5}\r\n                                emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                            />\r\n                            <h4>Оцените качество продукции</h4>\r\n                        </Box>\r\n                        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                            <IconButton onClick={() => addAndDeleteProductInCart(productToDetails)}\r\n                            color={checkProductInCart(productToDetails.id) ? \"secondary\" : \"primary\"} \r\n                            style={{ fontSize: '1.3em' }} \r\n                            aria-label=\"add to shopping cart\"\r\n                            >\r\n                                <AddShoppingCartIcon style={{ fontSize: 60 }} />\r\n                            </IconButton>\r\n                            <h4>{checkProductInCart(productToDetails.id) ? 'Добавлено в корзину' : \"Недобавлено\"}</h4>\r\n                        </Box>\r\n                        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                            <IconButton onClick={() => addAndDeleteProductInLiked(productToDetails)}\r\n                            color={checkProductInLiked(productToDetails.id) ? \"secondary\" : \"primary\"}\r\n                            style={{ fontSize: '1.3em' }}\r\n                            aria-label=\"add to shopping cart\">\r\n                                <FavoriteIcon style={{ fontSize: 60 }} />\r\n                            </IconButton>\r\n                            <h4>{checkProductInLiked(productToDetails.id) ? 'Добавлено в Избранное' : \"Недобавлено\"}</h4>\r\n                        </Box>\r\n                    </Container>\r\n                </Container>\r\n                : 'Loading'}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Header\\Cart\\Cart.jsx",["256","257","258"],"import React, { useEffect, useContext } from 'react';\r\nimport { calcSubPrice, calcTotalPrice } from '../../../helpers/CalcPrice';\r\nimport { Link } from 'react-router-dom';\r\nimport './Cart.css'\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { profileContext } from '../../../contexts/ProfileContext';\r\nfunction Cart() {\r\n    const { cartData, getCart, changeCountProducts, makeOrder, deleteItem } = useContext(profileContext);\r\n    useEffect(() => {\r\n        getCart()\r\n    }, [])\r\n\r\n    console.log('cart', cartData)\r\n\r\n    function handleChangeCount(e, id) {\r\n        changeCountProducts(e.target.value, id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            {cartData != undefined ? (\r\n                <div>\r\n                    {console.log(cartData)}\r\n                    <table className=\"cart-table\">\r\n                        <thead>\r\n                            <tr className=\"tr-title\">\r\n                                <th>image</th>\r\n                                <th>title</th>\r\n                                <th>price</th>\r\n                                <th>delete</th>\r\n                                <th>count</th>\r\n                                <th>subTotal</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {cartData.products.map(item => (\r\n                                <tr key={item.product.id} className=\"tr-info\">\r\n                                    <td><img style={{ width: \"80px\" }} src={item.product.img} /></td>\r\n                                    <td>{item.product.title}</td>\r\n                                    <td><span className=\"media-title\"> Сумма:</span>{item.product.price}  </td>\r\n                                    <td>\r\n                                        <button onClick={() => deleteItem(item.product.id)} className=\"delete-btn-cart\">Delete</button></td>\r\n                                    <td><input min={1} onChange={(e) => handleChangeCount(e, item.product.id)}\r\n                                        type=\"number\" value={item.count} /></td>\r\n                                    <td><span className=\"media-title\"> Итого</span>{calcSubPrice(item)} </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <h4 className=\"total-price\">Total: {calcTotalPrice(cartData.products)}</h4>\r\n                    <div className=\"btn-place-cart\">\r\n                        <Link to='/check'>\r\n                            <button onClick={(e) => makeOrder()} className=\"pay-cart\">\r\n                                Оформить заказ\r\n                        </button>\r\n                        </Link></div>\r\n                </div>\r\n\r\n            ) : <h1> Ваша <AddShoppingCartIcon />Пуста</h1>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Header\\Wish\\Wish.jsx",["259","260"],"import React, { useContext, useEffect } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { profileContext } from '../../../contexts/ProfileContext'\r\n\r\nconst Wish = () => {\r\n    const { getLiked, likeData, deleteItemInLiked, addAndDeleteProductInCart, checkProductInCart } = useContext(profileContext)\r\n    useEffect(() => {\r\n        getLiked()\r\n    }, [])\r\n    return (\r\n        <div className=\"cart\">\r\n            {likeData !== undefined ? (\r\n                <div>\r\n                    {console.log(likeData)}\r\n                    <table className=\"cart-table\">\r\n                        <thead>\r\n                            <tr className=\"tr-title\">\r\n                                <th>image</th>\r\n                                <th>title</th>\r\n                                <th>price</th>\r\n                                <th>delete</th>\r\n                                <th>Add to Cart</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {likeData.products.map(item => (\r\n                                <tr key={item.product.id} className=\"tr-info\">\r\n                                    <td><img style={{ width: \"80px\" }} src={item.product.img} /></td>\r\n                                    <td>{item.product.title}</td>\r\n                                    <td>{item.product.price}</td>\r\n                                    <td>\r\n                                        <button onClick={() => deleteItemInLiked(item.product.id)} className=\"delete-btn-cart\">Delete</button></td>\r\n                                    <td>\r\n                                        <IconButton onClick={() => addAndDeleteProductInCart(item)} color={checkProductInCart(item.id) ? \"secondary\" : \"primary\"} style={{ fontSize: '1.3em' }} aria-label=\"add to shopping cart\">\r\n                                            <AddShoppingCartIcon />\r\n                                        </IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            ) : ('NULL')}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wish;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Home\\payment\\Checkout.jsx",["261"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport ReviewForm from './ReviewForm';\r\nimport {Link} from 'react-router-dom';\r\nimport './style.css'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Meki-Home '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Адрес доставки', 'детали платежа', 'Просмотрите заказ'];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <AddressForm />;\r\n    case 1:\r\n      return <PaymentForm />;\r\n    case 2:\r\n      return <ReviewForm />;\r\n    default:\r\n      throw new Error('Unknown step');\r\n  }\r\n}\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Форма Заказа\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper} className='stepper'>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Спасибо за ваш заказ.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Номер вашего заказа: # 2001539. Мы отправили подтверждение вашего заказа по электронной почте и сообщим вам, когда он будет отправлен.\r\n                </Typography>\r\n                <Link to='/makeorder'>\r\n                  <Button className={classes.buttons}>Оплатить заказ </Button>\r\n                </Link>\r\n              </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                  {getStepContent(activeStep)}\r\n                  <div className={classes.buttons}>\r\n                    {activeStep !== 0 && (\r\n                      <Button onClick={handleBack} className={classes.button}>\r\n                        Назад\r\n                      </Button>\r\n                    )}\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? 'Посмотреть номер заказа' : 'След.'}\r\n                    </Button>\r\n\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n          </React.Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Home\\payment\\AddressForm.jsx",["262","263"],"import React, { useContext, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { profileContext } from '../../../contexts/ProfileContext'\r\n\r\nexport default function AddressForm() {\r\n\r\n  const { profile, profilePage, editProfile } = useContext(profileContext)\r\n\r\n  useEffect(() => {\r\n    profilePage()\r\n  }, [])\r\n\r\n  // console.log(profile)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Адрес Доставки\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            label=\"Имя\"\r\n            fullWidth\r\n            value={profile.name || ''}\r\n            autoComplete=\"given-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            value={profile.surName || ''}\r\n            label=\"Фамилия\"\r\n            fullWidth\r\n            autoComplete=\"family-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            value={profile.adress1 || ''}\r\n            label=\"Адресная строка 1\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            value={profile.adress2 || ''}\r\n            label=\"Адресная строка 2\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            value={profile.city || ''}\r\n            label=\"Город\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField id=\"state\" name=\"state\" \r\n          label=\"Государство/Провинция/Регион\" value={profile.region || ''} fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            value={profile.index || ''}\r\n            label=\"Почтовый индекс\"\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"country\"\r\n            value={profile.country || ''}\r\n            label=\"Страна\"\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n            label=\"Используйте этот адрес для платежных реквизитов\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Home\\payment\\PaymentForm.jsx",["264","265","266","267","268"],"import React, { useContext, useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport './style.css'\r\nimport visa_logo from './img/visa_logo.png'\r\nimport mastercard_logo from './img/mastercard_logo.png'\r\nimport paypal_logo from './img/paypal_logo.png'\r\nimport { profileContext } from '../../../contexts/ProfileContext';\r\n\r\n\r\nexport default function PaymentForm() {\r\n  const { profile, profilePage, editProfile } = useContext(profileContext)\r\n\r\n  useEffect(() => {\r\n    profilePage()\r\n  }, [])\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Способ оплаты\r\n      </Typography>\r\n      <div class=\"payment-method\">\r\n                        <label htmlFor=\"card\" class=\"method card\">\r\n                            <div class=\"card-logos\">\r\n                                <img src={visa_logo} />\r\n                                <img src={mastercard_logo} />\r\n                            </div>\r\n                            <div class=\"radio-input\">\r\n                                <input id=\"card\" type=\"radio\" name=\"payment\" />\r\n                                    Pay £340.00 with credit card\r\n                            </div>\r\n                        </label>\r\n                        <label htmlFor=\"paypal\" class=\"method paypal\">\r\n                            <img src={paypal_logo} />\r\n                            <div class=\"radio-input\">\r\n                                <input id=\"paypal\" type=\"radio\" name=\"payment\" />\r\n                                        Pay £340.00 with PayPal\r\n                                  </div>\r\n                        </label>\r\n                    </div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"cardName\" label=\"Название карты\" value={profile.nameCard || ''} fullWidth autoComplete=\"cc-name\" />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cardNumber\"\r\n            value={profile.numberCard || ''}\r\n            label=\"Номер карты\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"expDate\" label=\"Дата окончания\" value={profile.dateCard || ''} fullWidth autoComplete=\"cc-exp\" />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            value={profile.CVV || ''}\r\n            helperText=\"Последние три цифры на полосе для подписи\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n            label=\"Запомните данные кредитной карты в следующий раз\"\r\n            value={profile.name || ''}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Profile\\Profile.jsx",["269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],"import React, { useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { authContext } from '../../contexts/AuthContext';\r\nimport { Paper, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { profileContext } from '../../contexts/ProfileContext';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddressForm from '../Home/payment/AddressForm';\r\nimport PaymentForm from '../Home/payment/PaymentForm';\r\nimport ReviewForm from '../Home/payment/ReviewForm';\r\nimport logo from '../../img/logo.png';\r\nimport './Profile.css'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    width: '100%',\r\n    maxWidth: '50ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    padding: \"15px 10px\",\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: '60%',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    // marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      //   marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Адрес доставки', 'детали платежа', 'Просмотрите заказ'];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    //     case 0:\r\n    //       return <AddressForm />;\r\n    //     case 1:\r\n    //       return <PaymentForm />;\r\n    case 0:\r\n      return <ReviewForm />;\r\n    default:\r\n      throw new Error('Unknown step');\r\n  }\r\n}\r\n\r\nconst Profile = () => {\r\n  const classes = useStyles();\r\n  const [name, setName] = React.useState('')\r\n  const { profile, profilePage, editProfile } = useContext(profileContext)\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  useEffect(() => {\r\n    profilePage()\r\n  }, [])\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  const handleChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  return (\r\n\r\n    <div className='profileInp'>\r\n      <Grid container style={{ textAlign: 'center' }} noValidate autoComplete=\"off\">\r\n        <Paper className=\"container2\"> \r\n          <Grid container item md={12} >\r\n            <List className={classes.root} key={profile.id}>\r\n              <h3>Персональные данные</h3>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                </ListItemAvatar>\r\n              </ListItem>\r\n              <FormControl disabled >\r\n                <InputLabel htmlFor=\"component-disabled\">Surname</InputLabel>\r\n                <Input style={{ color: \"black\", width: '100%' }} id=\"component-disabled\" value={profile.surName} onChange={handleChange} />\r\n              </FormControl>\r\n              <FormControl disabled>\r\n                <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\r\n                <Input style={{ color: \"black\", width: '100%' }} id=\"component-disabled\" value={profile.name} onChange={handleChange} />\r\n              </FormControl>\r\n              <FormControl disabled>\r\n                <InputLabel htmlFor=\"component-disabled\">Patronymic</InputLabel>\r\n                <Input style={{ color: \"black\", width: '100%' }} id=\"component-disabled\" value={profile.patronymic} onChange={handleChange} />\r\n              </FormControl>\r\n              <FormControl disabled>\r\n                <InputLabel htmlFor=\"component-disabled\">Phone</InputLabel>\r\n                <Input style={{ color: \"black\", width: '100%' }} id=\"component-disabled\" value={profile.phone} onChange={handleChange} />\r\n              </FormControl>\r\n              <FormControl disabled>\r\n                <InputLabel htmlFor=\"component-disabled\">Birthdate</InputLabel>\r\n                <Input style={{ color: \"black\", width: '100%' }} id=\"component-disabled\" value={profile.birthdate} onChange={handleChange} />\r\n              </FormControl>\r\n              <FormControl disabled>\r\n                <InputLabel htmlFor=\"component-disabled\">Email</InputLabel>\r\n                <Input style={{ color: \"black\", width: '100%' }} id=\"component-disabled\" value={profile.Email} onChange={handleChange} />\r\n              </FormControl>\r\n              <FormControl>\r\n                <Link to='/edit_profile'>\r\n                  <IconButton variant=\"outlined\" color=\"primary\" onClick={() => editProfile()}><CreateIcon /> Edit</IconButton>\r\n                </Link>\r\n              </FormControl>\r\n            </List>\r\n\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <React.Fragment >\r\n        <CssBaseline />\r\n        <main className={classes.layout} className=\"container1\">\r\n          <Paper className={classes.paper} >\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color='primary'>\r\n              Форма Заказа\r\n            </Typography>\r\n\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Спасибо за ваш заказ.\r\n                </Typography>\r\n              <Typography variant=\"subtitle1\" align=\"center\">\r\n                Номер вашего заказа: # 2001539. Мы отправили подтверждение вашего заказа по электронной почте и сообщим вам, когда он будет отправлен.\r\n                </Typography>\r\n              <div style={{ display: 'flex', justifyContent: \"center\", margin: '20px 0px' }}>\r\n\r\n                <Link to='/makeorder'>\r\n                  <Button className={classes.buttons} variant=\"contained\"\r\n                    color=\"primary\">Оплатить заказ </Button>\r\n                </Link>\r\n              </div>\r\n            </React.Fragment>\r\n\r\n            <React.Fragment>\r\n              {getStepContent(activeStep)}\r\n            </React.Fragment>\r\n\r\n          </Paper>\r\n          <Copyright />\r\n        </main>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Profile\\EditProfile.jsx",["284","285"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { authContext } from '../../contexts/AuthContext';\r\nimport { Paper, Grid } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { profileContext } from '../../contexts/ProfileContext';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        width: '100%',\r\n        maxWidth: '36ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        padding: \"15px 10px\",\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n\r\n}));\r\n\r\nconst EditProfile = (props) => {\r\n    const classes = useStyles();\r\n    const { profToEdit, saveProf } = useContext(profileContext);\r\n    const [newEditItem, setNewEditItem] = useState(profToEdit)\r\n\r\n    useEffect(() => {\r\n        setNewEditItem(profToEdit)\r\n    }, [profToEdit])\r\n\r\n    function handleChange1(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            surName: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange2(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            name: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange3(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            patronymic: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange4(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            phone: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange5(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            birthdate: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange6(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            Email: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange7(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            country: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange8(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            city: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange9(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            adress1: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange10(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            index: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange11(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            nameCard: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange12(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            numberCard: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange13(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            dateCard: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    function handleChange14(e) {\r\n        let newObj = {\r\n            ...newEditItem,\r\n            CVV: e.target.value\r\n        }\r\n        setNewEditItem(newObj)\r\n    };\r\n    return (\r\n        <Grid container  noValidate autoComplete=\"off\">\r\n            <Paper style={{ margin: \"15px auto\", display: 'flex', justifyContent: 'center' }}>\r\n                {newEditItem ?\r\n                    <>\r\n                        <div>\r\n\r\n                            <Grid container item md={12}>\r\n                                <List className={classes.root}>\r\n                                    <h3>Персональные данные</h3>\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                                        </ListItemAvatar>\r\n                                    </ListItem>\r\n                                    <TextField\r\n                                        label=\"Фамилия\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.surName}\r\n                                        onChange={handleChange1}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Имя\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.name}\r\n                                        onChange={handleChange2}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Номер Телефона\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.phone}\r\n                                        onChange={handleChange4}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Дата рождения\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.birthdate}\r\n                                        onChange={handleChange5}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Email\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.Email}\r\n                                        onChange={handleChange6}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Страна\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.country}\r\n                                        onChange={handleChange7}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </List>\r\n                            </Grid>\r\n                        </div>\r\n                        <div>\r\n                            <Grid container item md={12}>\r\n                                <List className={classes.root}>\r\n                                    <h3>Персональные данные</h3>\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                                        </ListItemAvatar>\r\n                                    </ListItem>\r\n                                    <TextField\r\n                                        label=\"Город\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.city}\r\n                                        onChange={handleChange8}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Адрес\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.adress1}\r\n                                        onChange={handleChange9}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Индекс\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.index}\r\n                                        onChange={handleChange10}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Наименование карты\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.nameCard}\r\n                                        onChange={handleChange11}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Номер карты\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.numberCard}\r\n                                        onChange={handleChange12}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Дата окончания\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.dateCard}\r\n                                        onChange={handleChange13}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"CVV\"\r\n                                        style={{ margin: 8 }}\r\n                                        defaultValue={newEditItem.CVV}\r\n                                        onChange={handleChange14}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </List>\r\n                            </Grid>\r\n                        </div>\r\n                        <IconButton variant=\"outlined\" color=\"primary\" onClick={() => saveProf(newEditItem, props.history)}>Save</IconButton>\r\n                    </> \r\n                :<h1>Loading</h1>}\r\n                \r\n            </Paper>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default EditProfile;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\contexts\\ProfileContext.jsx",["286","287","288","289","290"],"import React, {useReducer} from 'react';\r\nimport { AUTH_API, JSON_API } from '../helpers/constants';\r\nimport axios from 'axios';\r\nimport { calcTotalPrice } from '../helpers/CalcPrice';\r\nimport { calcSubPrice } from '../helpers/CalcPrice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const profileContext = React.createContext();\r\nconst INIT_STATE = {\r\n    products: [],\r\n    profile: {},\r\n    page: 1,\r\n    profToEdit: null,\r\n    productToDetails: null,\r\n    comment: [],\r\n    totalCount: 0,\r\n    productToEdit: null,\r\n    productsCountInCart: JSON.parse(localStorage.getItem('cart')) ? JSON.parse(localStorage.getItem('cart')).products.length : 0,\r\n    productsCountInLiked: JSON.parse(localStorage.getItem('liked')) ? JSON.parse(localStorage.getItem('liked')).products.length : 0\r\n};\r\n\r\nconst reducer = (state=INIT_STATE, action) => {\r\n    switch(action.type){\r\n        case \"GET_CONTACTS_DATA\":\r\n            return { ...state, comment: action.payload }\r\n        case \"GET_PROFILE_PAGE\":\r\n            return {...state, profile: action.payload }\r\n        case \"EDIT_PROFILE\":\r\n            return { ...state, profToEdit: action.payload }\r\n        case \"CET_CONTACTS_DATA\":\r\n            return { ...state, products: action.payload }\r\n        case \"DETAILS_TODO\":\r\n            return { ...state, productToDetails: action.payload }\r\n        case \"ADD_AND_DELETE_PRODUCT_IN_CART\":\r\n            return { ...state, productsCountInCart: action.payload }\r\n        case \"GET_CART\":\r\n            return { ...state, cartData: action.payload }\r\n        case \"DELETE_ITEM\":\r\n            return { ...state, cartData: action.payload }\r\n        case \"ADD_AND_DELETE_PRODUCT_IN_LIKED\":\r\n            return { ...state, productsCountInLiked: action.payload }\r\n        case \"GET_LIKED\":\r\n            return { ...state, likeData: action.payload }\r\n        default: return state\r\n        case \"SET_TOTAL_COUNT\":\r\n            return { ...state, totalCount: action.payload };\r\n        case \"EDIT_TODO\":\r\n            return { ...state, productToEdit: action.payload }\r\n        case \"CONTACTS_SET_PAGE\":\r\n            return { ...state, page: action.page }\r\n        case \"SET_TOTAL_COUNT\":\r\n                return { ...state, totalCount: action.payload };\r\n    }\r\n}\r\n\r\nconst ProfileContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, INIT_STATE)\r\n    const history = useHistory();\r\n    const getreviewData = async () => {\r\n\r\n        let { data } = await axios(`http://localhost:8000/comment`)\r\n        dispatch({\r\n            type: \"GET_CONTACTS_DATA\",\r\n            payload: data\r\n        })  \r\n    }\r\n\r\n    const addTask = async (newTask) => {\r\n        await axios.post('http://localhost:8000/comment', newTask)\r\n        getreviewData()\r\n    }\r\n\r\n    const deleteTask = async (id) => {\r\n        await axios.delete(`http://localhost:8000/comment/${id}`)\r\n        getreviewData()\r\n    }\r\n\r\n    \r\n    async function profilePage() {\r\n        let  {data}  = await axios(`${JSON_API}/profile`)\r\n        console.log(data);\r\n        dispatch({\r\n            type: \"GET_PROFILE_PAGE\",\r\n            payload: data\r\n        })\r\n    }\r\n    async function editProfile() {\r\n        let { data } = await axios(`${JSON_API}/profile`)\r\n        console.log(data)\r\n        dispatch({\r\n            type: \"EDIT_PROFILE\",\r\n            payload: data\r\n        })\r\n    }\r\n    const saveProf = async (newProf, history) => {\r\n        console.log(newProf);\r\n        try {\r\n            await axios.patch(`${JSON_API}/profile`, newProf)\r\n            history.push('/profile')\r\n        } catch (error) {\r\n            history.push('/error')\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const getproductsData = async () => {\r\n        let params = new URLSearchParams(window.location.search);\r\n        if (!params.get(\"_page\")) params.set(\"_page\", 1);\r\n        if (!params.get(\"_limit\")) params.set(\"_limit\", 3);\r\n        history.push(\"/list?\" + params);\r\n        let { data, headers } = await axios(`http://localhost:8000/products?${params}`);\r\n        dispatch({\r\n            type: \"SET_TOTAL_COUNT\",\r\n            payload: parseInt(headers[\"x-total-count\"])\r\n        })\r\n        dispatch({\r\n            type: \"CET_CONTACTS_DATA\",\r\n            payload: data\r\n        })\r\n    }\r\n    const pageTask = async (page) => {\r\n        const search = new URLSearchParams(window.location.search);\r\n        search.set(\"_page\", page);\r\n        search.set(\"_limit\", 3);\r\n        history.replace(window.location.pathname + \"?\" + search.toString());\r\n        getproductsData()\r\n    }\r\n    const pageAdmin = async (page) => {\r\n        const search = new URLSearchParams(window.location.search);\r\n        search.set(\"_page\", page);\r\n        search.set(\"_limit\", 3);\r\n        history.replace(window.location.pathname + \"?\" + search.toString());\r\n        getproductsAdmin()\r\n    }\r\n    const getproductsAdmin = async () => {\r\n        let params = new URLSearchParams(window.location.search);\r\n        if (!params.get(\"_page\")) params.set(\"_page\", 1);\r\n        if (!params.get(\"_limit\")) params.set(\"_limit\", 3);\r\n        history.push(\"/admin?\" + params);\r\n        let { data, headers } = await axios(`http://localhost:8000/products?${params}`);\r\n        dispatch({\r\n            type: \"SET_TOTAL_COUNT\",\r\n            payload: parseInt(headers[\"x-total-count\"])\r\n        })\r\n        dispatch({\r\n            type: \"CET_CONTACTS_DATA\",\r\n            payload: data\r\n        })\r\n    }\r\n\r\n\r\n    const addTaskAdmin = async (newTask) => {\r\n        await axios.post('http://localhost:8000/products', newTask)\r\n        getproductsAdmin()\r\n    }\r\n\r\n    const deleteTaskAdmin = async (id) => {\r\n        await axios.delete(`http://localhost:8000/products/${id}`)\r\n        getproductsAdmin()\r\n    }\r\n\r\n    const editTodo = async (id) => {\r\n        let { data } = await axios(`http://localhost:8000/products/${id}`)\r\n        dispatch({\r\n            type: \"EDIT_TODO\",\r\n            payload: data\r\n        })\r\n    }\r\n    const saveTask = async (newTask, history) => {\r\n        try {\r\n            await axios.patch(`http://localhost:8000/products/${newTask.id}`, newTask)\r\n            history.push('/admin')\r\n        } catch (error) {\r\n            history.push('/error')\r\n        }\r\n    }\r\n    const getproductsDataRating = async (id) => {\r\n        let { data, headers } = await axios(`http://localhost:8000/products?${id}`);\r\n        dispatch({\r\n            type: \"CET_CONTACTS_DATA\",\r\n            payload: data\r\n        })\r\n    }\r\n    const detailsTodo = async (id) => {\r\n        let { data } = await axios(`http://localhost:8000/products/${id}`)\r\n        dispatch({\r\n            type: \"DETAILS_TODO\",\r\n            payload: data\r\n        })\r\n    }\r\n    function addAndDeleteProductInCart(product) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n        if (!cart) {\r\n            cart = {\r\n                products: [],\r\n                totalPrice: 0\r\n            };\r\n        }\r\n        let newProduct = {\r\n            product: product,\r\n            count: 1,\r\n            subPrice: 0\r\n        }\r\n\r\n        newProduct.subPrice = calcSubPrice(newProduct)\r\n        let newCart = cart.products.filter(item => item.product.id === product.id)\r\n        if (newCart.length > 0) {\r\n            cart.products = cart.products.filter(item => item.product.id !== product.id)\r\n        } else {\r\n            cart.products.push(newProduct)\r\n        }\r\n        cart.totalPrice = calcTotalPrice(cart.products)\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n        dispatch({\r\n            type: \"ADD_AND_DELETE_PRODUCT_IN_CART\",\r\n            payload: cart.products.length\r\n        })\r\n\r\n    }\r\n\r\n    function checkProductInCart(id) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n        if (!cart) {\r\n            cart = {\r\n                products: [],\r\n                totalPrice: 0\r\n            }\r\n        }\r\n        let newCart = cart.products.filter(item => item.product.id === id)\r\n        return newCart.length > 0 ? true : false\r\n    }\r\n\r\n    function getCart() {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n        dispatch({\r\n            type: \"GET_CART\",\r\n            payload: cart\r\n        })\r\n    }\r\n    function changeCountProducts(count, id) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n        cart.products = cart.products.map(item => {\r\n            if (item.product.id === id) {\r\n                item.count = count\r\n                item.subPrice = calcSubPrice(item)\r\n            }\r\n            return item\r\n        })\r\n        cart.totalPrice = calcTotalPrice(cart.products)\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n        getCart()\r\n    }\r\n\r\n    function makeOrder() {\r\n        let cart = JSON.parse(localStorage.getItem('cart'))\r\n        console.log(cart)\r\n    }\r\n\r\n    async function ratingProduct(id, rating) {\r\n        console.log(id,rating);\r\n        await axios.patch(`http://localhost:8000/products/${id}`, {rating: rating})\r\n        getproductsDataRating()\r\n    }\r\n\r\n    function deleteItem(id) {\r\n        console.log('ID', id);\r\n        let cart = JSON.parse(localStorage.getItem('cart'))\r\n        cart.products = cart.products.filter(item => item.product.id !== id)\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n        getCart()\r\n    }\r\n\r\n    function addAndDeleteProductInLiked(product) {\r\n        let liked = JSON.parse(localStorage.getItem('liked'));\r\n        if (!liked) {\r\n            liked = {\r\n                products: []\r\n            };\r\n        }\r\n        let newProduct = {\r\n            product: product\r\n        }\r\n        let newLiked = liked.products.filter(item => item.product.id === product.id)\r\n        if (newLiked.length > 0) {\r\n            liked.products = liked.products.filter(item => item.product.id !== product.id)\r\n        } else {\r\n            liked.products.push(newProduct)\r\n        }\r\n        liked.totalPrice = calcTotalPrice(liked.products)\r\n        localStorage.setItem(\"liked\", JSON.stringify(liked))\r\n        dispatch({\r\n            type: \"ADD_AND_DELETE_PRODUCT_IN_LIKED\",\r\n            payload: liked.products.length\r\n        })\r\n\r\n    }\r\n\r\n    function checkProductInLiked(id) {\r\n        let liked = JSON.parse(localStorage.getItem('liked'));\r\n        if (!liked) {\r\n            liked = {\r\n                products: [],\r\n                totalPrice: 0\r\n            }\r\n        }\r\n        let newLiked = liked.products.filter(item => item.product.id === id)\r\n        return newLiked.length > 0 ? true : false\r\n\r\n    }\r\n\r\n    function getLiked() {\r\n        let liked = JSON.parse(localStorage.getItem('liked'));\r\n        dispatch({\r\n            type: \"GET_LIKED\",\r\n            payload: liked\r\n        })\r\n    }\r\n\r\n    function deleteItemInLiked(id) {\r\n        console.log('ID', id);\r\n        let liked = JSON.parse(localStorage.getItem('liked'))\r\n        liked.products = liked.products.filter(item => item.product.id !== id)\r\n        localStorage.setItem(\"liked\", JSON.stringify(liked))\r\n        getLiked()\r\n    }\r\n    \r\n    return (\r\n        <profileContext.Provider value ={{\r\n            products: state.products,\r\n            comment: state.comment,\r\n            profile: state.profile,\r\n            profToEdit: state.profToEdit,\r\n            productToEdit: state.productToEdit,\r\n            productToDetails: state.productToDetails,\r\n            productsCountInCart: state.productsCountInCart,\r\n            productsCountInLiked: state.productsCountInLiked,\r\n            cartData: state.cartData,\r\n            likeData: state.likeData,\r\n            page: state.page,\r\n            totalCount: state.totalCount,\r\n            addTask,\r\n            addTaskAdmin,\r\n            getproductsData,\r\n            getreviewData,\r\n            deleteTaskAdmin,\r\n            profilePage,\r\n            editProfile,\r\n            getproductsAdmin,\r\n            pageAdmin,\r\n            deleteTask,\r\n            editTodo,\r\n            saveTask,\r\n            pageTask,\r\n            saveProf,\r\n            // checkPage,\r\n            deleteItemInLiked,\r\n            getLiked,\r\n            addAndDeleteProductInLiked,\r\n            checkProductInLiked,\r\n            getproductsDataRating,\r\n            addAndDeleteProductInCart,\r\n            checkProductInCart,\r\n            detailsTodo,\r\n            deleteItem,\r\n            getCart,\r\n            makeOrder,\r\n            changeCountProducts,\r\n            ratingProduct,\r\n            getproductsData,\r\n            pageTask,\r\n        }}>\r\n            {children}\r\n        </profileContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ProfileContextProvider;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Product\\ProductCard.jsx",["291","292","293","294","295","296","297","298","299"],"import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './ProductCard.css'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { profileContext } from '../../contexts/ProfileContext';\r\n\r\nconst labels = {\r\n    0.5: 'Useless',\r\n    1: 'Useless+',\r\n    1.5: 'Poor',\r\n    2: 'Poor+',\r\n    2.5: 'Ok',\r\n    3: 'Ok+',\r\n    3.5: 'Good',\r\n    4: 'Good+',\r\n    4.5: 'Excellent',\r\n    5: 'Excellent+',\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 200,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: '10px',\r\n        textAlign: 'center',\r\n        paddingLeft: '60px',\r\n    },\r\n    media: {\r\n        height: \"25vh\",\r\n        paddingTop: '56.25%',\r\n        backgroundSize: \"contain\"\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n\r\nexport default function ProductCarditem({ item }) {\r\n    const [value, setValue] = useState(`${item.rating}`);\r\n    const [hover, setHover] = useState(-1);\r\n    const classes = useStyles();\r\n\r\n    const { addAndDeleteProductInCart, checkProductInCart, addAndDeleteProductInLiked, checkProductInLiked } = useContext(profileContext)\r\n    return (\r\n        <div className=\"product-card\" >\r\n            <Card >\r\n                <CardHeader\r\n                    title={<Typography variant=\"h5\" align=\"center\">{item.title}</Typography>}\r\n                /><Link to={`/details` + item.id}>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={item.img}\r\n                    /></Link>\r\n                <CardActions style={{ justifyContent: \"space-around\", display: 'block' }}>\r\n                    <Typography variant=\"h6\">\r\n                        {item.price} сом\r\n                    </Typography>\r\n                    <div className={classes.root}>\r\n                        <Rating\r\n                            precision={1}\r\n                            name=\"read-only\"\r\n                             value={item.rating}\r\n                              readOnly\r\n                        />\r\n                    </div >\r\n\r\n                    <IconButton onClick={() => addAndDeleteProductInCart(item)} color={checkProductInCart(item.id) ? \"secondary\" : \"primary\"} style={{ fontSize: '1.3em' }} aria-label=\"add to shopping cart\">\r\n                        <AddShoppingCartIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => addAndDeleteProductInLiked(item)} color={checkProductInLiked(item.id) ? \"secondary\" : \"primary\"} style={{ fontSize: '1.3em' }} aria-label=\"add to shopping cart\">\r\n                        <FavoriteIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Review\\ParentReview.jsx",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Review\\ReviewList.jsx",["300","301","302","303"],"import React, { useContext, useEffect } from 'react';\r\nimport { authContext } from '../../contexts/AuthContext';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport '../../assets/css/style.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import { faBold } from '@fortawesome/free-solid-svg-icons';\r\nimport { profileContext } from '../../contexts/ProfileContext';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        marginTop: 100,\r\n        minWidth: 650,\r\n    },\r\n    // navBar:{\r\n    //     fontSize: 40,\r\n    // }\r\n});\r\n\r\nfunction createData(nickName, review) {\r\n    return { nickName, review };\r\n}\r\n\r\nconst row = [\r\n    createData('Full Name', 159, 6.0, 24, 4.0),\r\n    createData('Comments', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n];\r\n\r\nconst ReviewList = () => {\r\n    const classes = useStyles();\r\n    const { getreviewData, deleteTask, comment } = useContext(profileContext)\r\n\r\n    let imgs = [\r\n        'https://static.toiimg.com/photo/61933358.cms',\r\n        'https://i.pinimg.com/originals/24/f0/9f/24f09fef68dfa31d0cd96eb222dc97f0.jpg'\r\n    ]\r\n\r\n    useEffect(() => {\r\n        getreviewData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"caption table\">\r\n                    <caption>Будь с нами</caption>\r\n                    <TableHead>\r\n                        <TableRow className={classes.navBar}>\r\n                            <TableCell>Аватарка</TableCell>\r\n                            <TableCell align=\"right\">Nick Name</TableCell>\r\n                            <TableCell align=\"right\">Комментарий</TableCell>\r\n                            <TableCell align=\"right\">Удалить</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {comment.map((item) => (\r\n                            <TableRow key={item.id}>\r\n                                <TableCell component=\"th\" scope=\"item\">\r\n                                    <Avatar src={imgs[1]} color=\"primary\"></Avatar>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{item.nickName}</TableCell>\r\n                                <TableCell align=\"right\">{item.review}</TableCell>\r\n                                <TableCell align=\"right\"><IconButton aria-label=\"delete\" color=\"primary\" onClick={() => deleteTask(item.id)}><DeleteIcon /></IconButton></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ReviewList;","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Review\\Review.jsx",["304","305"],"\r\nimport React, { useContext, useState } from 'react';\r\n// import {todoContext} from '../../contexts/TodoContext'\r\nimport Button from '@material-ui/core/Button';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport '../../assets/css/style.css'\r\nimport { authContext } from '../../contexts/AuthContext';\r\nimport { profileContext } from '../../contexts/ProfileContext';\r\n\r\nconst Review = () => {\r\n    let {addTask} = useContext (profileContext)\r\n    let [value, setValue] = useState('')\r\n    let [value1, setValue1] = useState('')\r\n    let [isError,setError] = useState(false)\r\n\r\n\r\n    function handleClick() {\r\n        if (!value ) {\r\n            setError(true)\r\n            return\r\n        }else{\r\n            setError(false)\r\n        }\r\n\r\n        let newObj = {\r\n            nickName: value1,\r\n            review: value,\r\n            id: Date.now()\r\n        }\r\n\r\n        addTask(newObj)\r\n        console.log(newObj)\r\n        setValue('')\r\n        setValue1('')\r\n\r\n    }          \r\n    return (\r\n        <div className='review_component'>\r\n            <h1 >Оставьте совй комментарий</h1>\r\n            <input \r\n            type=\"text\"\r\n            value={value1}\r\n            placeholder=\"Nick Name\"\r\n            className='rev_inpName_component'\r\n            onChange={(e) => setValue1(e.target.value)}\r\n            style={isError ? {borderColor: 'red'}:{borderColor: 'white'}}\r\n             /><br/>\r\n            <input  style={isError ? {borderColor: 'red'}:{borderColor: 'white'}} \r\n                value={value} onChange={(e) => setValue(e.target.value)}\r\n                type=\"text\" \r\n                placeholder=\"Комментарий\"\r\n                className='rev_inp_component'\r\n            /><br/>\r\n            <Button variant=\"contained\" size=\"large\" color=\"dark\" onClick={handleClick}>Отправить</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Review;\r\n\r\n","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Home\\payment\\ReviewForm.jsx",["306","307","308","309","310","311","312","313","314","315","316","317"],"import React, { useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { calcSubPrice, calcTotalPrice } from '../../../helpers/CalcPrice';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { profileContext } from '../../../contexts/ProfileContext';\r\n\r\nconst products = [\r\n  { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\r\n  { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\r\n  { name: 'Product 3', desc: 'Something else', price: '$6.51' },\r\n  { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\r\n  { name: 'Shipping', desc: '', price: 'Free' },\r\n];\r\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\r\n// const payments = [\r\n//   { name: 'Card type', detail: {profile.nameCard} },\r\n//   { name: 'Card holder', detail: 'Mr John Smith' },\r\n//   { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n//   { name: 'Expiry date', detail: '04/2024' },\r\n// ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n    fontWeight: 700,\r\n  },\r\n}));\r\n\r\nexport default function Review() {\r\n  const classes = useStyles();\r\n  const { profile, profilePage, editProfile, cartData, getCart, changeCountProducts, makeOrder, deleteItem } = useContext(profileContext)\r\n  useEffect(() => {\r\n    getCart()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {cartData != undefined ? (\r\n        <React.Fragment>\r\n          <Typography marginTop='50' variant=\"h5\" align=\"center\" gutterBottom>\r\n            Подробнее о Вашем заказе\r\n      </Typography>\r\n          <div>\r\n            <table className=\"cart-table\">\r\n              <thead>\r\n                <tr >\r\n                  <th>название</th>\r\n                  <th>цена</th>\r\n                  <th>Количество</th>\r\n                  <th>Сумма</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {cartData.products.map(item => (\r\n                  <tr key={item.product.id} className=\"tr-info\">\r\n                    <td style={{ fontWeight: \"bold\", fontFamily: 'serif', fontSize: '20px' }}>{item.product.title}</td>\r\n                    <td><span className=\"media-title\"> Сумма: </span>{item.product.price}  </td>\r\n                    <td><input type=\"text\" value={item.count} /></td>\r\n                    <td><span className=\"media-title\"> Итого: </span>{calcSubPrice(item)} </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <h4 style={{textAlign:'center', fontWeight: \"bold\", fontFamily: 'serif', fontSize: '30px' }}>ИТОГО:   {calcTotalPrice(cartData.products)} сом</h4>\r\n          </div>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                Перевозка\r\n          </Typography>\r\n              <Typography gutterBottom>{profile.surName} {profile.name}</Typography>\r\n              <Typography gutterBottom></Typography>\r\n              {/* <Typography gutterBottom>{profile.patronymic}</Typography> */}\r\n              <Typography gutterBottom>Страна:  {profile.country}</Typography>\r\n              <Typography gutterBottom>г. {profile.city}, {profile.adress1}</Typography>\r\n              <Typography gutterBottom>{profile.city}</Typography>\r\n              <Typography gutterBottom>Индекс:  {profile.index}</Typography>\r\n              <Typography gutterBottom>Номер тел.:  {profile.phone}</Typography>\r\n              <Typography gutterBottom>Ваш Email:  {profile.Email}</Typography>\r\n            </Grid>\r\n            <Grid item container direction=\"column\" xs={12} sm={6}>\r\n              <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                Детали платежа\r\n          </Typography>\r\n              <Grid container>\r\n\r\n                <React.Fragment key={profile.id}>\r\n                  <Grid item xs={6}>\r\n                    <Typography gutterBottom>Название карты:  </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography gutterBottom>{profile.nameCard}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography gutterBottom>Дата окончания:  </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography gutterBottom>{profile.dateCard}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography gutterBottom>Номер карты:  </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    {/* <Typography gutterBottom>{(profile.numberCard).toString().replace(/(\\d{6})/,'*')}</Typography> */}\r\n                    <Typography gutterBottom>{profile.numberCard3333}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography gutterBottom>CVV:       </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography gutterBottom>{profile.CVV}</Typography>\r\n                  </Grid>\r\n                </React.Fragment>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n      ) : <h1> Ваша <AddShoppingCartIcon />Пуста</h1>}\r\n    </div>\r\n  );\r\n}\r\n// value={profile.country || ''}","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\CreditCard\\PaymentCard\\CreditCard.jsx",["318"],"\r\nimport React from \"react\";\r\nimport Card from \"react-credit-cards\";\r\nimport './CreditCard.css';\r\nimport TotalSum from '../../Header/Cart/TotalSum';\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n  formatCreditCardNumber,\r\n  formatCVC,\r\n  formatExpirationDate,\r\n  formatFormData\r\n} from \"../utils\";\r\n\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    number: \"\",\r\n    name: \"\",\r\n    expiry: \"\",\r\n    cvc: \"\",\r\n    focused: \"\",\r\n    formData: null\r\n  };\r\n\r\n  handleCallback = ({ issuer }, isValid) => {\r\n    if (isValid) {\r\n      this.setState({ issuer });\r\n    }\r\n  };\r\n\r\n  handleInputFocus = ({ target }) => {\r\n    this.setState({\r\n      focused: target.name\r\n    });\r\n  };\r\n\r\n  handleInputChange = ({ target }) => {\r\n    if (target.name === \"number\") {\r\n      target.value = formatCreditCardNumber(target.value);\r\n    } else if (target.name === \"expiry\") {\r\n      target.value = formatExpirationDate(target.value);\r\n    } else if (target.name === \"cvc\") {\r\n      target.value = formatCVC(target.value);\r\n    }\r\n\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { issuer } = this.state;\r\n    const formData = [...e.target.elements]\r\n      .filter(d => d.name)\r\n      .reduce((acc, d) => {\r\n        acc[d.name] = d.value;\r\n        return acc;\r\n      }, {});\r\n\r\n    this.setState({ formData });\r\n    this.form.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number, expiry, cvc, focused, issuer, formData } = this.state;\r\n\r\n    return (\r\n      <div key=\"Payment\">\r\n        <div className=\"App-payment\">\r\n          <div className=\"card-div\">\r\n          <Card\r\n            number={number}\r\n            name={name}\r\n            expiry={expiry}\r\n            cvc={cvc}\r\n            focused={focused}\r\n            callback={this.handleCallback}\r\n          />\r\n          </div>\r\n          <form ref={c => (this.form = c)} onSubmit={this.handleSubmit}  className=\"inputs\">\r\n            <div className=\"form-group\">\r\n              <span className=\"title\">Card Number:</span>\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Card Number\"\r\n                pattern=\"[\\d| ]{16,22}\"\r\n                required\r\n                onChange={this.handleInputChange}\r\n                onFocus={this.handleInputFocus}\r\n              /> <br/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <span className=\"title\">Card Holder Name:</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className=\"form-control\"\r\n                placeholder=\"Name\"\r\n                required\r\n                onChange={this.handleInputChange}\r\n                onFocus={this.handleInputFocus}\r\n                style={{width: '50%'}}\r\n              />\r\n              \r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"more\">\r\n                <span className=\"title-valid\">Valid:</span>\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"expiry\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Valid Thru\"\r\n                  pattern=\"\\d\\d/\\d\\d\"\r\n                  required\r\n                  onChange={this.handleInputChange}\r\n                  onFocus={this.handleInputFocus}\r\n                />\r\n              </div>\r\n              <div className=\"more\">\r\n              <span className=\"title-valid\">Cvc:</span>\r\n                <input\r\n\r\n                  type=\"tel\"\r\n                  name=\"cvc\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"CVC\"\r\n                  pattern=\"\\d{3}\"\r\n                  required\r\n                  onChange={this.handleInputChange}\r\n                  onFocus={this.handleInputFocus}\r\n                />\r\n              </div>\r\n            </div>\r\n            <input type=\"hidden\" name=\"issuer\" value={issuer} />\r\n            <div className=\"form-actions\">\r\n              <Link to=\"/list\">\r\n              <button className=\"btn-pay btn-primary btn-block\">PAY</button></Link>\r\n            </div><br/>\r\n            <div className=\"total-sum\">\r\n            <TotalSum/>\r\n            </div>\r\n          </form>\r\n          {formData && (\r\n            <div className=\"App-highlight\">\r\n              {formatFormData(formData).map((d, i) => (\r\n                <div key={i}>{d}</div>\r\n              ))}\r\n            </div>\r\n          )}\r\n          </div>\r\n        </div> \r\n    );\r\n  }\r\n}\r\n","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\CreditCard\\utils.jsx",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Header\\Cart\\TotalSum.jsx",["319"],"import React, { useState } from 'react';\r\nimport { useContext, useEffect } from 'react';\r\nimport { profileContext } from '../../../contexts/ProfileContext';\r\n\r\nfunction TotalSum() {\r\n    const { makeOrder } = useContext(profileContext)\r\n    const [state, setState] = useState(null)\r\nconsole.log(state)\r\n    useEffect(() => {\r\n        let cart = makeOrder()\r\n        setState(cart)\r\n        console.log(cart)\r\n    }, [])\r\n    console.log(state)\r\n    return (\r\n        <div>\r\n            {state != null ? state.totalPrice: false}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TotalSum\r\n","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\SearchPage\\SearchPage.jsx",[],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Search\\SearchFunction\\SearchFunction.jsx",["320"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport SearchProductList from '../SearchProductList/SearchProductList';\r\nimport axios from 'axios';\r\nimport './SearchFunction.css';\r\nconst SearchFunction = (props) => {\r\n  const [input, setInput] = useState('');\r\n  const [countryList, setCountryList] = useState([]);\r\n\r\n\r\n  const updateInput = async (input) => {\r\n    if (!input) {\r\n      setCountryList([])\r\n      return setInput([])\r\n\r\n    } else {\r\n      let { data } = await axios(`http://localhost:8000/products?title_like=${input}`)\r\n      setCountryList(data)\r\n      setInput(input);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"search-func\">\r\n      <div className=\"search-div\">\r\n        <SearchBar\r\n          input={input}\r\n          updateInput={updateInput}\r\n        />\r\n      </div>\r\n      <div className=\"search-result\">\r\n        <SearchProductList countryList={countryList} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchFunction","C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Search\\SearchBar\\SearchBar.jsx",["321","322"],"import React,{useState, useEffect} from 'react';\r\n\r\nconst SearchBar = ({input,updateInput}) => {\r\n  \r\n    \r\n  const BarStyling = {width:\"20rem\",background:\"#F2F1F9\", border:\"none\", padding:\"0.5rem\", height: '3.5rem', borderRadius: '10px',fontSize: '1.5em'};\r\n  \r\n  return (\r\n      <div >\r\n    <input \r\n     style={BarStyling}\r\n     key=\"random1\"\r\n     value={input}\r\n     placeholder={\"search product\"}\r\n     onChange={(e) => updateInput(e.target.value)}\r\n    />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar",["323","324"],"C:\\Users\\User\\Desktop\\my-hackathon\\src\\container\\Search\\SearchProductList\\SearchProductList.jsx",["325","326","327","328","329","330"],"\r\nimport React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import { productContext } from '../../../contexts/ProductsContext';\r\nimport './SearchProductList.css'\r\nimport { profileContext } from '../../../contexts/ProfileContext';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nconst CountryList = ({countryList=[]}) => {\r\n    const { addAndDeleteProductInCart, checkProductInCart, addAndDeleteProductInLiked, checkProductInLiked, ratingProduct,  getproductsData} = useContext(profileContext)\r\n\r\n    return (\r\n        <>\r\n        {countryList.map((item,index)=>{\r\n            if(item) {\r\n                return(\r\n                    <div className=\"product-card\" key={item.id}>\r\n                    <Card >\r\n                        \r\n                        <CardHeader\r\n                            title={<Typography variant=\"h5\" align=\"center\">{item.title}</Typography>}\r\n                        />\r\n                        <div className=\"img-block\">\r\n                        <Link to={`/details` + item.id}>\r\n                        <img src={item.img} alt=\"\" />\r\n                        </Link>\r\n                        </div>\r\n                        <CardActions style={{ justifyContent: \"space-around\" }}>\r\n                            <Typography variant=\"h6\">\r\n                                {item.price} сом\r\n                            </Typography>\r\n         \r\n                            <IconButton onClick={() => addAndDeleteProductInCart(item)}\r\n                            color={checkProductInCart(item.id) ? \"secondary\" : \"primary\"} \r\n                            style={{ fontSize: '1.3em' }} \r\n                            aria-label=\"add to shopping cart\"\r\n                            >\r\n                                <AddShoppingCartIcon />\r\n                            </IconButton>\r\n     \r\n                            <IconButton onClick={() => addAndDeleteProductInLiked(item)}\r\n                            color={checkProductInLiked(item.id) ? \"secondary\" : \"primary\"}\r\n                            style={{ fontSize: '1.3em' }}\r\n                            aria-label=\"add to shopping cart\">\r\n                                <FavoriteIcon />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                    </Card>\r\n                </div>\r\n                )\r\n            }\r\n            return null\r\n        })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CountryList;",{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","severity":1,"message":"336","line":11,"column":8,"nodeType":"337","messageId":"338","endLine":11,"endColumn":30},{"ruleId":"335","severity":1,"message":"339","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":26},{"ruleId":"335","severity":1,"message":"340","line":25,"column":10,"nodeType":"337","messageId":"338","endLine":25,"endColumn":18},{"ruleId":"335","severity":1,"message":"341","line":25,"column":20,"nodeType":"337","messageId":"338","endLine":25,"endColumn":31},{"ruleId":"335","severity":1,"message":"342","line":26,"column":10,"nodeType":"337","messageId":"338","endLine":26,"endColumn":14},{"ruleId":"335","severity":1,"message":"343","line":26,"column":16,"nodeType":"337","messageId":"338","endLine":26,"endColumn":23},{"ruleId":"335","severity":1,"message":"344","line":27,"column":16,"nodeType":"337","messageId":"338","endLine":27,"endColumn":23},{"ruleId":"345","severity":1,"message":"346","line":35,"column":26,"nodeType":"347","messageId":"348","endLine":35,"endColumn":27},{"ruleId":"335","severity":1,"message":"349","line":6,"column":8,"nodeType":"337","messageId":"338","endLine":6,"endColumn":17},{"ruleId":"335","severity":1,"message":"350","line":13,"column":8,"nodeType":"337","messageId":"338","endLine":13,"endColumn":16},{"ruleId":"335","severity":1,"message":"351","line":14,"column":8,"nodeType":"337","messageId":"338","endLine":14,"endColumn":25},{"ruleId":"335","severity":1,"message":"352","line":93,"column":7,"nodeType":"337","messageId":"338","endLine":93,"endColumn":23},{"ruleId":"335","severity":1,"message":"353","line":102,"column":11,"nodeType":"337","messageId":"338","endLine":102,"endColumn":16},{"ruleId":"335","severity":1,"message":"354","line":105,"column":12,"nodeType":"337","messageId":"338","endLine":105,"endColumn":16},{"ruleId":"335","severity":1,"message":"355","line":105,"column":18,"nodeType":"337","messageId":"338","endLine":105,"endColumn":25},{"ruleId":"335","severity":1,"message":"356","line":107,"column":12,"nodeType":"337","messageId":"338","endLine":107,"endColumn":18},{"ruleId":"335","severity":1,"message":"357","line":110,"column":11,"nodeType":"337","messageId":"338","endLine":110,"endColumn":22},{"ruleId":"358","severity":1,"message":"359","line":212,"column":39,"nodeType":"360","endLine":212,"endColumn":63},{"ruleId":"361","severity":1,"message":"362","line":42,"column":18,"nodeType":"347","messageId":"363","endLine":42,"endColumn":20},{"ruleId":"335","severity":1,"message":"364","line":2,"column":20,"nodeType":"337","messageId":"338","endLine":2,"endColumn":28},{"ruleId":"365","severity":1,"message":"366","line":13,"column":5,"nodeType":"367","messageId":"368","endLine":17,"endColumn":6},{"ruleId":"335","severity":1,"message":"369","line":20,"column":12,"nodeType":"337","messageId":"338","endLine":20,"endColumn":17},{"ruleId":"335","severity":1,"message":"370","line":20,"column":19,"nodeType":"337","messageId":"338","endLine":20,"endColumn":27},{"ruleId":"335","severity":1,"message":"371","line":29,"column":19,"nodeType":"337","messageId":"338","endLine":29,"endColumn":22},{"ruleId":"335","severity":1,"message":"371","line":42,"column":19,"nodeType":"337","messageId":"338","endLine":42,"endColumn":22},{"ruleId":"365","severity":1,"message":"366","line":23,"column":5,"nodeType":"367","messageId":"368","endLine":45,"endColumn":6},{"ruleId":"335","severity":1,"message":"372","line":1,"column":40,"nodeType":"337","messageId":"338","endLine":1,"endColumn":48},{"ruleId":"373","severity":1,"message":"374","line":49,"column":8,"nodeType":"375","endLine":49,"endColumn":10,"suggestions":"376"},{"ruleId":"358","severity":1,"message":"359","line":56,"column":66,"nodeType":"360","endLine":56,"endColumn":83},{"ruleId":"335","severity":1,"message":"377","line":12,"column":8,"nodeType":"337","messageId":"338","endLine":12,"endColumn":18},{"ruleId":"335","severity":1,"message":"378","line":13,"column":8,"nodeType":"337","messageId":"338","endLine":13,"endColumn":19},{"ruleId":"335","severity":1,"message":"379","line":36,"column":38,"nodeType":"337","messageId":"338","endLine":36,"endColumn":46},{"ruleId":"335","severity":1,"message":"380","line":36,"column":48,"nodeType":"337","messageId":"338","endLine":36,"endColumn":64},{"ruleId":"335","severity":1,"message":"343","line":44,"column":18,"nodeType":"337","messageId":"338","endLine":44,"endColumn":25},{"ruleId":"335","severity":1,"message":"381","line":45,"column":21,"nodeType":"337","messageId":"338","endLine":45,"endColumn":31},{"ruleId":"361","severity":1,"message":"362","line":87,"column":18,"nodeType":"347","messageId":"363","endLine":87,"endColumn":20},{"ruleId":"361","severity":1,"message":"362","line":107,"column":25,"nodeType":"347","messageId":"363","endLine":107,"endColumn":27},{"ruleId":"361","severity":1,"message":"362","line":127,"column":25,"nodeType":"347","messageId":"363","endLine":127,"endColumn":27},{"ruleId":"361","severity":1,"message":"362","line":146,"column":25,"nodeType":"347","messageId":"363","endLine":146,"endColumn":27},{"ruleId":"361","severity":1,"message":"362","line":165,"column":25,"nodeType":"347","messageId":"363","endLine":165,"endColumn":27},{"ruleId":"358","severity":1,"message":"359","line":230,"column":52,"nodeType":"360","endLine":230,"endColumn":69},{"ruleId":"335","severity":1,"message":"382","line":1,"column":39,"nodeType":"337","messageId":"338","endLine":1,"endColumn":48},{"ruleId":"335","severity":1,"message":"342","line":55,"column":10,"nodeType":"337","messageId":"338","endLine":55,"endColumn":14},{"ruleId":"335","severity":1,"message":"344","line":56,"column":16,"nodeType":"337","messageId":"338","endLine":56,"endColumn":23},{"ruleId":"345","severity":1,"message":"346","line":71,"column":26,"nodeType":"347","messageId":"348","endLine":71,"endColumn":27},{"ruleId":"383","severity":1,"message":"384","line":87,"column":19,"nodeType":"385","endLine":87,"endColumn":54},{"ruleId":"383","severity":1,"message":"384","line":103,"column":19,"nodeType":"385","endLine":103,"endColumn":54},{"ruleId":"383","severity":1,"message":"384","line":118,"column":19,"nodeType":"385","endLine":118,"endColumn":54},{"ruleId":"383","severity":1,"message":"384","line":132,"column":19,"nodeType":"385","endLine":132,"endColumn":54},{"ruleId":"383","severity":1,"message":"384","line":148,"column":19,"nodeType":"385","endLine":148,"endColumn":54},{"ruleId":"335","severity":1,"message":"372","line":1,"column":40,"nodeType":"337","messageId":"338","endLine":1,"endColumn":48},{"ruleId":"335","severity":1,"message":"386","line":3,"column":10,"nodeType":"337","messageId":"338","endLine":3,"endColumn":24},{"ruleId":"335","severity":1,"message":"387","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":14},{"ruleId":"335","severity":1,"message":"388","line":6,"column":22,"nodeType":"337","messageId":"338","endLine":6,"endColumn":32},{"ruleId":"335","severity":1,"message":"389","line":39,"column":11,"nodeType":"337","messageId":"338","endLine":39,"endColumn":18},{"ruleId":"373","severity":1,"message":"390","line":43,"column":8,"nodeType":"375","endLine":43,"endColumn":10,"suggestions":"391"},{"ruleId":"335","severity":1,"message":"392","line":15,"column":8,"nodeType":"337","messageId":"338","endLine":15,"endColumn":18},{"ruleId":"335","severity":1,"message":"393","line":21,"column":7,"nodeType":"337","messageId":"338","endLine":21,"endColumn":19},{"ruleId":"335","severity":1,"message":"394","line":75,"column":12,"nodeType":"337","messageId":"338","endLine":75,"endColumn":18},{"ruleId":"335","severity":1,"message":"395","line":75,"column":20,"nodeType":"337","messageId":"338","endLine":75,"endColumn":29},{"ruleId":"373","severity":1,"message":"396","line":78,"column":8,"nodeType":"375","endLine":78,"endColumn":10,"suggestions":"397"},{"ruleId":"358","severity":1,"message":"359","line":92,"column":50,"nodeType":"360","endLine":92,"endColumn":80},{"ruleId":"373","severity":1,"message":"398","line":11,"column":8,"nodeType":"375","endLine":11,"endColumn":10,"suggestions":"399"},{"ruleId":"361","severity":1,"message":"400","line":21,"column":23,"nodeType":"347","messageId":"363","endLine":21,"endColumn":25},{"ruleId":"401","severity":1,"message":"402","line":38,"column":41,"nodeType":"385","endLine":38,"endColumn":97},{"ruleId":"373","severity":1,"message":"403","line":11,"column":8,"nodeType":"375","endLine":11,"endColumn":10,"suggestions":"404"},{"ruleId":"401","severity":1,"message":"402","line":30,"column":41,"nodeType":"385","endLine":30,"endColumn":97},{"ruleId":"358","severity":1,"message":"359","line":98,"column":72,"nodeType":"360","endLine":98,"endColumn":91},{"ruleId":"335","severity":1,"message":"405","line":11,"column":33,"nodeType":"337","messageId":"338","endLine":11,"endColumn":44},{"ruleId":"373","severity":1,"message":"406","line":15,"column":6,"nodeType":"375","endLine":15,"endColumn":8,"suggestions":"407"},{"ruleId":"335","severity":1,"message":"405","line":15,"column":33,"nodeType":"337","messageId":"338","endLine":15,"endColumn":44},{"ruleId":"373","severity":1,"message":"406","line":19,"column":6,"nodeType":"375","endLine":19,"endColumn":8,"suggestions":"408"},{"ruleId":"401","severity":1,"message":"402","line":28,"column":33,"nodeType":"385","endLine":28,"endColumn":56},{"ruleId":"401","severity":1,"message":"402","line":29,"column":33,"nodeType":"385","endLine":29,"endColumn":62},{"ruleId":"401","severity":1,"message":"402","line":37,"column":29,"nodeType":"385","endLine":37,"endColumn":54},{"ruleId":"335","severity":1,"message":"409","line":7,"column":10,"nodeType":"337","messageId":"338","endLine":7,"endColumn":21},{"ruleId":"335","severity":1,"message":"410","line":17,"column":8,"nodeType":"337","messageId":"338","endLine":17,"endColumn":14},{"ruleId":"335","severity":1,"message":"411","line":18,"column":8,"nodeType":"337","messageId":"338","endLine":18,"endColumn":15},{"ruleId":"335","severity":1,"message":"412","line":19,"column":8,"nodeType":"337","messageId":"338","endLine":19,"endColumn":15},{"ruleId":"335","severity":1,"message":"413","line":20,"column":8,"nodeType":"337","messageId":"338","endLine":20,"endColumn":12},{"ruleId":"335","severity":1,"message":"414","line":21,"column":8,"nodeType":"337","messageId":"338","endLine":21,"endColumn":17},{"ruleId":"335","severity":1,"message":"415","line":24,"column":8,"nodeType":"337","messageId":"338","endLine":24,"endColumn":19},{"ruleId":"335","severity":1,"message":"416","line":25,"column":8,"nodeType":"337","messageId":"338","endLine":25,"endColumn":19},{"ruleId":"335","severity":1,"message":"417","line":27,"column":8,"nodeType":"337","messageId":"338","endLine":27,"endColumn":12},{"ruleId":"335","severity":1,"message":"418","line":94,"column":7,"nodeType":"337","messageId":"338","endLine":94,"endColumn":12},{"ruleId":"335","severity":1,"message":"419","line":111,"column":10,"nodeType":"337","messageId":"338","endLine":111,"endColumn":14},{"ruleId":"373","severity":1,"message":"406","line":116,"column":6,"nodeType":"375","endLine":116,"endColumn":8,"suggestions":"420"},{"ruleId":"335","severity":1,"message":"421","line":118,"column":9,"nodeType":"337","messageId":"338","endLine":118,"endColumn":19},{"ruleId":"335","severity":1,"message":"422","line":122,"column":9,"nodeType":"337","messageId":"338","endLine":122,"endColumn":19},{"ruleId":"358","severity":1,"message":"359","line":178,"column":42,"nodeType":"360","endLine":178,"endColumn":64},{"ruleId":"335","severity":1,"message":"409","line":7,"column":10,"nodeType":"337","messageId":"338","endLine":7,"endColumn":21},{"ruleId":"335","severity":1,"message":"423","line":53,"column":14,"nodeType":"337","messageId":"338","endLine":53,"endColumn":27},{"ruleId":"335","severity":1,"message":"424","line":2,"column":10,"nodeType":"337","messageId":"338","endLine":2,"endColumn":18},{"ruleId":"425","severity":1,"message":"426","line":51,"column":9,"nodeType":"427","messageId":"363","endLine":52,"endColumn":65},{"ruleId":"335","severity":1,"message":"428","line":184,"column":21,"nodeType":"337","messageId":"338","endLine":184,"endColumn":28},{"ruleId":"429","severity":1,"message":"430","line":375,"column":13,"nodeType":"431","messageId":"363","endLine":375,"endColumn":28},{"ruleId":"429","severity":1,"message":"432","line":376,"column":13,"nodeType":"431","messageId":"363","endLine":376,"endColumn":21},{"ruleId":"335","severity":1,"message":"433","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":14},{"ruleId":"335","severity":1,"message":"434","line":4,"column":16,"nodeType":"337","messageId":"338","endLine":4,"endColumn":22},{"ruleId":"335","severity":1,"message":"386","line":11,"column":10,"nodeType":"337","messageId":"338","endLine":11,"endColumn":24},{"ruleId":"335","severity":1,"message":"435","line":13,"column":8,"nodeType":"337","messageId":"338","endLine":13,"endColumn":11},{"ruleId":"335","severity":1,"message":"436","line":19,"column":7,"nodeType":"337","messageId":"338","endLine":19,"endColumn":13},{"ruleId":"335","severity":1,"message":"437","line":59,"column":12,"nodeType":"337","messageId":"338","endLine":59,"endColumn":17},{"ruleId":"335","severity":1,"message":"438","line":59,"column":19,"nodeType":"337","messageId":"338","endLine":59,"endColumn":27},{"ruleId":"335","severity":1,"message":"439","line":60,"column":12,"nodeType":"337","messageId":"338","endLine":60,"endColumn":17},{"ruleId":"335","severity":1,"message":"440","line":60,"column":19,"nodeType":"337","messageId":"338","endLine":60,"endColumn":27},{"ruleId":"335","severity":1,"message":"409","line":2,"column":10,"nodeType":"337","messageId":"338","endLine":2,"endColumn":21},{"ruleId":"335","severity":1,"message":"441","line":5,"column":8,"nodeType":"337","messageId":"338","endLine":5,"endColumn":25},{"ruleId":"335","severity":1,"message":"442","line":33,"column":7,"nodeType":"337","messageId":"338","endLine":33,"endColumn":10},{"ruleId":"373","severity":1,"message":"443","line":50,"column":8,"nodeType":"375","endLine":50,"endColumn":10,"suggestions":"444"},{"ruleId":"335","severity":1,"message":"445","line":5,"column":8,"nodeType":"337","messageId":"338","endLine":5,"endColumn":21},{"ruleId":"335","severity":1,"message":"409","line":7,"column":10,"nodeType":"337","messageId":"338","endLine":7,"endColumn":21},{"ruleId":"335","severity":1,"message":"446","line":4,"column":8,"nodeType":"337","messageId":"338","endLine":4,"endColumn":12},{"ruleId":"335","severity":1,"message":"447","line":5,"column":8,"nodeType":"337","messageId":"338","endLine":5,"endColumn":16},{"ruleId":"335","severity":1,"message":"448","line":6,"column":8,"nodeType":"337","messageId":"338","endLine":6,"endColumn":20},{"ruleId":"335","severity":1,"message":"379","line":12,"column":7,"nodeType":"337","messageId":"338","endLine":12,"endColumn":15},{"ruleId":"335","severity":1,"message":"449","line":19,"column":7,"nodeType":"337","messageId":"338","endLine":19,"endColumn":16},{"ruleId":"335","severity":1,"message":"450","line":42,"column":20,"nodeType":"337","messageId":"338","endLine":42,"endColumn":31},{"ruleId":"335","severity":1,"message":"405","line":42,"column":33,"nodeType":"337","messageId":"338","endLine":42,"endColumn":44},{"ruleId":"335","severity":1,"message":"451","line":42,"column":65,"nodeType":"337","messageId":"338","endLine":42,"endColumn":84},{"ruleId":"335","severity":1,"message":"452","line":42,"column":86,"nodeType":"337","messageId":"338","endLine":42,"endColumn":95},{"ruleId":"335","severity":1,"message":"453","line":42,"column":97,"nodeType":"337","messageId":"338","endLine":42,"endColumn":107},{"ruleId":"373","severity":1,"message":"398","line":45,"column":6,"nodeType":"375","endLine":45,"endColumn":8,"suggestions":"454"},{"ruleId":"361","severity":1,"message":"400","line":49,"column":17,"nodeType":"347","messageId":"363","endLine":49,"endColumn":19},{"ruleId":"335","severity":1,"message":"455","line":52,"column":13,"nodeType":"337","messageId":"338","endLine":52,"endColumn":19},{"ruleId":"373","severity":1,"message":"456","line":13,"column":8,"nodeType":"375","endLine":13,"endColumn":10,"suggestions":"457"},{"ruleId":"335","severity":1,"message":"382","line":1,"column":27,"nodeType":"337","messageId":"338","endLine":1,"endColumn":36},{"ruleId":"335","severity":1,"message":"372","line":1,"column":15,"nodeType":"337","messageId":"338","endLine":1,"endColumn":23},{"ruleId":"335","severity":1,"message":"382","line":1,"column":25,"nodeType":"337","messageId":"338","endLine":1,"endColumn":34},{"ruleId":"331","replacedBy":"458"},{"ruleId":"333","replacedBy":"459"},{"ruleId":"335","severity":1,"message":"460","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":20},{"ruleId":"335","severity":1,"message":"433","line":5,"column":10,"nodeType":"337","messageId":"338","endLine":5,"endColumn":14},{"ruleId":"335","severity":1,"message":"434","line":5,"column":16,"nodeType":"337","messageId":"338","endLine":5,"endColumn":22},{"ruleId":"335","severity":1,"message":"461","line":8,"column":8,"nodeType":"337","messageId":"338","endLine":8,"endColumn":17},{"ruleId":"335","severity":1,"message":"462","line":18,"column":109,"nodeType":"337","messageId":"338","endLine":18,"endColumn":122},{"ruleId":"335","severity":1,"message":"463","line":18,"column":125,"nodeType":"337","messageId":"338","endLine":18,"endColumn":140},"no-native-reassign",["464"],"no-negated-in-lhs",["465"],"no-unused-vars","'ProductContextProvider' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'setPage' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'InputBase' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'AccordionDetails' is assigned a value but never used.","'theme' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'button' is assigned a value but never used.","'handleClick' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'JSON_API' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'res' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getproductsAdmin'. Either include it or remove the dependency array.","ArrayExpression",["466"],"'CardHeader' is defined but never used.","'CardActions' is defined but never used.","'products' is assigned a value but never used.","'getproductsAdmin' is assigned a value but never used.","'setSubType' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'productContext' is defined but never used.","'Link' is defined but never used.","'withStyles' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getproductsData'. Either include it or remove the dependency array.",["467"],"'Typography' is defined but never used.","'StyledRating' is assigned a value but never used.","'rating' is assigned a value but never used.","'setRating' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'detailsTodo' and 'props.match.params.id'. Either include them or remove the dependency array.",["468"],"React Hook useEffect has a missing dependency: 'getCart'. Either include it or remove the dependency array.",["469"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'getLiked'. Either include it or remove the dependency array.",["470"],"'editProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'profilePage'. Either include it or remove the dependency array.",["471"],["472"],"'authContext' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'AddressForm' is defined but never used.","'PaymentForm' is defined but never used.","'logo' is defined but never used.","'steps' is assigned a value but never used.","'name' is assigned a value but never used.",["473"],"'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'handleChange3' is defined but never used.","'AUTH_API' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'headers' is assigned a value but never used.","no-dupe-keys","Duplicate key 'getproductsData'.","ObjectExpression","Duplicate key 'pageTask'.","'Grid' is defined but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'labels' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'hover' is assigned a value but never used.","'setHover' is assigned a value but never used.","'AccountCircleIcon' is defined but never used.","'row' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getreviewData'. Either include it or remove the dependency array.",["474"],"'PersonAddIcon' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'addresses' is assigned a value but never used.","'profilePage' is assigned a value but never used.","'changeCountProducts' is assigned a value but never used.","'makeOrder' is assigned a value but never used.","'deleteItem' is assigned a value but never used.",["475"],"'issuer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'makeOrder'. Either include it or remove the dependency array.",["476"],["464"],["465"],"'makeStyles' is defined but never used.","'CardMedia' is defined but never used.","'ratingProduct' is assigned a value but never used.","'getproductsData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"487","fix":"489"},{"desc":"487","fix":"490"},{"desc":"491","fix":"492"},{"desc":"483","fix":"493"},{"desc":"494","fix":"495"},"Update the dependencies array to be: [getproductsAdmin]",{"range":"496","text":"497"},"Update the dependencies array to be: [getproductsData]",{"range":"498","text":"499"},"Update the dependencies array to be: [detailsTodo, props.match.params.id]",{"range":"500","text":"501"},"Update the dependencies array to be: [getCart]",{"range":"502","text":"503"},"Update the dependencies array to be: [getLiked]",{"range":"504","text":"505"},"Update the dependencies array to be: [profilePage]",{"range":"506","text":"507"},{"range":"508","text":"507"},{"range":"509","text":"507"},"Update the dependencies array to be: [getreviewData]",{"range":"510","text":"511"},{"range":"512","text":"503"},"Update the dependencies array to be: [makeOrder]",{"range":"513","text":"514"},[1609,1611],"[getproductsAdmin]",[1254,1256],"[getproductsData]",[2715,2717],"[detailsTodo, props.match.params.id]",[508,510],"[getCart]",[523,525],"[getLiked]",[564,566],"[profilePage]",[738,740],[3552,3554],[1711,1713],"[getreviewData]",[1735,1737],[416,418],"[makeOrder]"]